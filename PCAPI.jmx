<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="PC-API" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">qa.drxwebservices.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="auth-host" elementType="Argument">
            <stringProp name="Argument.name">auth-host</stringProp>
            <stringProp name="Argument.value">qa-auth.drxwebservices.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="basic-auth" elementType="Argument">
            <stringProp name="Argument.name">basic-auth</stringProp>
            <stringProp name="Argument.value">eDZxSzJwWmJFZUtLdHdBVlhRd3JCQTpwYXNzd29yZA==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="DynamicBearerToken" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">grant_type=client_credentials</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${auth-host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">v1/auth/token?format=json</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Basic ${basic-auth}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(token, ${token})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Session" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.Header;
String token = props.get(&quot;token&quot;);
log.info(&quot;\n\n\n***************run time token is  &quot; + token);
log.info(&quot;\n\n\n***************Bearer token is  &quot; + &quot;Bearer&quot; +token);
sampler.getHeaderManager().add(new Header(&quot;Authorization&quot;,&quot;Bearer&quot; +token));</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Session" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;HealthStatus&quot;: &quot;3&quot;,&#xd;
        &quot;Birthdate&quot;: &quot;01-01-1960&quot;,&#xd;
        &quot;EffectiveDate&quot;: &quot;09-01-2022&quot;,&#xd;
        &quot;SubsidyLevel&quot;: &quot;4&quot;,&#xd;
        &quot;Zip&quot;: &quot;90010&quot;,&#xd;
        &quot;Fips&quot;: &quot;06037&quot;,&#xd;
        &quot;IsPrimary&quot;: false,&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">SessionID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">[0].SessionID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion" enabled="true">
            <stringProp name="BeanShellAssertion.query">${__setProperty(SessionID, ${SessionID})};</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Session" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${__property(SessionID)}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Plans (JSON)-Working" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.Header;
String token = props.get(&quot;token&quot;);
log.info(&quot;\n\n\n***************run time token is  &quot; + token);
log.info(&quot;\n\n\n***************Bearer token is  &quot; + &quot;Bearer&quot; +token);
sampler.getHeaderManager().add(new Header(&quot;Authorization&quot;,&quot;Bearer&quot; +token));</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" Create session" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;HealthStatus&quot;: &quot;3&quot;,&#xd;
        &quot;Birthdate&quot;: &quot;01-01-1960&quot;,&#xd;
        &quot;EffectiveDate&quot;: &quot;09-01-2022&quot;,&#xd;
        &quot;SubsidyLevel&quot;: &quot;4&quot;,&#xd;
        &quot;Zip&quot;: &quot;90010&quot;,&#xd;
        &quot;Fips&quot;: &quot;06037&quot;,&#xd;
        &quot;IsPrimary&quot;: false,&#xd;
    }&#xd;
]    </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">SessionID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">[0].SessionID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetPlans" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022-09-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">MedicarePlans[0].ID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Enroll" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;CustomInternal&quot;: {&#xd;
        &quot;StoringData&quot;: {&#xd;
            &quot;PartAEffectiveDate&quot;: &quot;01/01/2022&quot;,&#xd;
            &quot;PartBEffectiveDate&quot;: &quot;01/01/2022&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;Enrollee&quot;: {&#xd;
        &quot;Address1&quot;: &quot;1234 Main Street&quot;,&#xd;
        &quot;Address2&quot;: &quot;#2B&quot;,&#xd;
        &quot;DateOfBirth&quot;: &quot;03-14-1940&quot;,&#xd;
        &quot;City&quot;: &quot;Los Angeles&quot;,&#xd;
        &quot;CountyFIPS&quot;: &quot;06037&quot;,&#xd;
        &quot;EffectiveDate&quot;: &quot;04-01-2022&quot;,&#xd;
        &quot;Email&quot;: &quot;bsmith@test.com&quot;,&#xd;
        &quot;FirstName&quot;: &quot;ben&quot;,&#xd;
        &quot;Gender&quot;: &quot;M&quot;,&#xd;
        &quot;LastName&quot;: &quot;smith&quot;,&#xd;
        &quot;MiddleInitial&quot;: &quot;M&quot;,&#xd;
        &quot;PhoneNumber&quot;: &quot;8174223434&quot;,&#xd;
        &quot;State&quot;: &quot;CA&quot;,&#xd;
        &quot;Title&quot;: &quot;&quot;,&#xd;
        &quot;Zip&quot;: &quot;90210&quot;&#xd;
    },&#xd;
    &quot;Enroller&quot;: {&#xd;
        &quot;BrokerID&quot;: &quot;1234567&quot;,&#xd;
        &quot;PartnerID&quot;: &quot;CNXR1&quot;,&#xd;
        &quot;UserType&quot;: &quot;BROKER&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">APIPlanCompare/v1/Session/${SessionID}/Plans/1888YR9051/Enroll?sendToBeneficiary=false&amp;effectiveDate=07-01-2022</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Plan enroll" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;payload&quot;: {&#xd;
        &quot;customInternal&quot;: {&#xd;
            &quot;CustomInternal&quot;: {&#xd;
                &quot;StoringData&quot;: {&#xd;
                    &quot;AgentID&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentFirstName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentLastName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentGuid&quot;: &quot;3b7ab13d-e6c9-4991-b003-f41c0db9901d&quot;,&#xd;
                    &quot;ExternalAgentID&quot;: &quot;SSOAgent999&quot;,	&#xd;
                    &quot;AgentEmail&quot;: &quot;desaiconnecturetest@gmail.com&quot;,&#xd;
                    &quot;AgentUserName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentState&quot;: &quot;CA&quot;,&#xd;
                    &quot;AgentAddress1&quot;: &quot;123 Any Street&quot;,&#xd;
                    &quot;AgentCity&quot;: &quot;Anytown&quot;,&#xd;
                    &quot;AgentZipCode&quot;: &quot;90010&quot;,&#xd;
                    &quot;AgentCellNumber&quot;: &quot;7085555555&quot;,&#xd;
                    &quot;AgentNPN&quot;: &quot;1234567&quot;,&#xd;
                    &quot;HasAgentContext&quot;: &quot;True&quot;,&#xd;
                    &quot;ApplicantGender&quot;: &quot;0&quot;,&#xd;
                    &quot;ApplicantRelationship&quot;: &quot;Self&quot;,&#xd;
                    &quot;ApplicantZip&quot;: &quot;90010&quot;,&#xd;
                    &quot;ApplicantCity&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;ApplicantCounty&quot;: &quot;06037&quot;,&#xd;
                    &quot;ApplicantCountyName&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;ApplicantState&quot;: &quot;CA&quot;,&#xd;
                    &quot;ApplicantDemoState&quot;: &quot;CA&quot;,&#xd;
                    &quot;ApplicantMemberID&quot;: &quot;5935870&quot;,&#xd;
                    &quot;RptApplicantRelationship_0&quot;: &quot;Self&quot;,&#xd;
                    &quot;RptProductSelected_0&quot;: &quot;NONE&quot;,&#xd;
                    &quot;UserType&quot;: &quot;CONSUMER&quot;,&#xd;
                    &quot;HTTPReferrer&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;ReferringDomain&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;IsPreview&quot;: &quot;False&quot;,&#xd;
                    &quot;AppID&quot;: &quot;4000&quot;,&#xd;
                    &quot;ClientName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;AppDomainOrName&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;PlanID&quot;: &quot;282564&quot;,&#xd;
                    &quot;PlanName&quot;: &quot;flexcare MAPD plan 3&quot;,&#xd;
                    &quot;PlanType&quot;: &quot;MAPD&quot;,&#xd;
                    &quot;PlanYear&quot;: &quot;2022&quot;,&#xd;
                    &quot;CarrierName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;CarrierID&quot;: &quot;257&quot;,&#xd;
                    &quot;ExternalID&quot;: &quot;H9999&quot;,&#xd;
                    &quot;ExternalSegmentID&quot;: &quot;257&quot;,&#xd;
                    &quot;ExternalPlanID&quot;: &quot;013&quot;,&#xd;
                    &quot;PlanSubType&quot;: &quot;HMO&quot;,&#xd;
                    &quot;PlanTypeSubType&quot;: &quot;MAPDHMO&quot;,&#xd;
                    &quot;PlanSegment&quot;: &quot;H9999-013-257&quot;,&#xd;
                    &quot;SelectedPlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;CurrentEnrollment_PlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;CurrentEnrollment_IsMedigap&quot;: &quot;False&quot;,&#xd;
                    &quot;EnrollmentPlanYear&quot;: &quot;2022&quot;,&#xd;
                    &quot;PlanPremiumMonthly&quot;: &quot;$33.00&quot;,&#xd;
                    &quot;PlanPremium&quot;: &quot;33.00&quot;,&#xd;
                    &quot;PlanSNPType&quot;: &quot;NOT_SNP&quot;,&#xd;
                    &quot;NationalProviderNumber&quot;: &quot;1234567&quot;,&#xd;
                    &quot;CurrentDate&quot;: &quot;07/06/2022&quot;,&#xd;
                    &quot;DisplaySEP&quot;: &quot;true&quot;,&#xd;
                    &quot;CountyFIPS&quot;: &quot;06037&quot;,&#xd;
                    &quot;WebsiteURL&quot;: &quot;https://www.connecture.com&quot;,&#xd;
                    &quot;DestinationClientName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;OrgName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;EnrollAddress1&quot;: &quot;123 Any Street&quot;,&#xd;
                    &quot;EnrollCity&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;EnrollState&quot;: &quot;CA&quot;,&#xd;
                    &quot;EnrollZIP&quot;: &quot;90010&quot;,&#xd;
                    &quot;EnrollPhone&quot;: &quot;1-800-379-90&quot;,&#xd;
                    &quot;EnrollTTY&quot;: &quot;711&quot;,&#xd;
                    &quot;EnrollHours&quot;: &quot;8 am - 8 pm central time&quot;,&#xd;
                    &quot;ZipCode&quot;: &quot;90010&quot;,&#xd;
                    &quot;County_FIPS&quot;: &quot;06037&quot;,&#xd;
                    &quot;TierServiceCalled&quot;: &quot;false&quot;,&#xd;
                    &quot;authSignature&quot;: &quot;N&quot;,&#xd;
                    &quot;Age65AsOfEffectiveDate&quot;: &quot;N&quot;,&#xd;
                    &quot;Age65InLast6MonthsOfEffectiveDate&quot;: &quot;N&quot;,&#xd;
                    &quot;MedicarePartBInLast6Months&quot;: &quot;N&quot;,&#xd;
                    &quot;utm_source&quot;: &quot;pc1&quot;,&#xd;
                    &quot;utm_medium&quot;: &quot;email&quot;,&#xd;
                    &quot;utm_campaign&quot;: &quot;bpml&quot;,&#xd;
                    &quot;RepeaterNumber&quot;: &quot;1&quot;,&#xd;
                    &quot;InternalPlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;PlanIDs&quot;: &quot;282564&quot;,&#xd;
                    &quot;IsMedigap&quot;: &quot;False&quot;,&#xd;
                    &quot;FormType&quot;: &quot;LongForm&quot;,&#xd;
                    &quot;AgencyName&quot;: &quot;&quot;,&#xd;
                    &quot;AgencyID&quot;: &quot;&quot;,&#xd;
                    &quot;AlzheimersDiseaseOrDementia&quot;: &quot;&quot;,&#xd;
                    &quot;AnginaOrHeartAttack&quot;: &quot;&quot;,&#xd;
                    &quot;AnxietyOrMildDepression&quot;: &quot;&quot;,&#xd;
                    &quot;Asthma&quot;: &quot;&quot;,&#xd;
                    &quot;AthritisHipKnee&quot;: &quot;&quot;,&#xd;
                    &quot;AtrialFibrillationOrFlutter&quot;: &quot;&quot;,&#xd;
                    &quot;BipolarOrSchizophrenia&quot;: &quot;&quot;,&#xd;
                    &quot;CancersOrTumors&quot;: &quot;&quot;,&#xd;
                    &quot;ChronsDiseaseOrUlcerativeColitis&quot;: &quot;&quot;,&#xd;
                    &quot;CongestiveHeartFailure&quot;: &quot;&quot;,&#xd;
                    &quot;CoronaryOrCarotidArteryDisease&quot;: &quot;&quot;,&#xd;
                    &quot;Diabetes&quot;: &quot;&quot;,&#xd;
                    &quot;DiabetesNoComplications&quot;: &quot;&quot;,&#xd;
                    &quot;EnlargedProstate&quot;: &quot;&quot;,&#xd;
                    &quot;Fibromyalgia&quot;: &quot;&quot;,&#xd;
                    &quot;GERDAcidReflux&quot;: &quot;&quot;,&#xd;
                    &quot;GlaucomaOrMacularDegeneration&quot;: &quot;&quot;,&#xd;
                    &quot;HighBloodPressure&quot;: &quot;&quot;,&#xd;
                    &quot;HighCholesterol&quot;: &quot;&quot;,&#xd;
                    &quot;HypothyroidismOrHyperthyroidism&quot;: &quot;&quot;,&#xd;
                    &quot;KidneyConditions&quot;: &quot;&quot;,&#xd;
                    &quot;LiverConditions&quot;: &quot;&quot;,&#xd;
                    &quot;LungOrRespiratoryConditions&quot;: &quot;&quot;,&#xd;
                    &quot;Lupus&quot;: &quot;&quot;,&#xd;
                    &quot;MajorDepression&quot;: &quot;&quot;,&#xd;
                    &quot;MedicalQuestionDialysis&quot;: &quot;&quot;,&#xd;
                    &quot;MedicalConditionPastTwoYears&quot;: &quot;&quot;,&#xd;
                    &quot;Migraines&quot;: &quot;&quot;,&#xd;
                    &quot;MultipleSclerosis&quot;: &quot;&quot;,&#xd;
                    &quot;MyastheniaGravis&quot;: &quot;&quot;,&#xd;
                    &quot;Osteoporosis&quot;: &quot;&quot;,&#xd;
                    &quot;OtherImmuneDeficiency&quot;: &quot;&quot;,&#xd;
                    &quot;ParkinsonsDisease&quot;: &quot;&quot;,&#xd;
                    &quot;Psoriasis&quot;: &quot;&quot;,&#xd;
                    &quot;RhuematoidArthritis&quot;: &quot;&quot;,&#xd;
                    &quot;AuthSignature&quot;: &quot;N&quot;,&#xd;
                    &quot;NoneOfTheseApplyQA&quot;: &quot;&quot;,&#xd;
                    &quot;NoneOfTheseApplyQB&quot;: &quot;&quot;,&#xd;
                    &quot;NoconditionApplyC&quot;: &quot;&quot;,&#xd;
                    &quot;NoneOfTheseApply&quot;: &quot;&quot;,&#xd;
                    &quot;Utm_source&quot;: &quot;pc1&quot;,&#xd;
                    &quot;Utm_medium&quot;: &quot;email&quot;,&#xd;
                    &quot;Utm_campaign&quot;: &quot;bpml&quot;&#xd;
                },&#xd;
                &quot;DynamicData&quot;: {&#xd;
                    &quot;AgentID&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentFirstName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentLastName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentGuid&quot;: &quot;3b7ab13d-e6c9-4991-b003-f41c0db9901d&quot;,&#xd;
                    &quot;ExternalAgentID&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentEmail&quot;: &quot;desaiconnecturetest@gmail.com&quot;,&#xd;
                    &quot;AgentUserName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentState&quot;: &quot;CA&quot;,&#xd;
                    &quot;AgentAddress1&quot;: &quot;123 Any Street&quot;,&#xd;
                    &quot;AgentCity&quot;: &quot;Anytown&quot;,&#xd;
                    &quot;AgentZipCode&quot;: &quot;90010&quot;,&#xd;
                    &quot;AgentCellNumber&quot;: &quot;7085555555&quot;,&#xd;
                    &quot;AgentNPN&quot;: &quot;1234567&quot;,&#xd;
                    &quot;HasAgentContext&quot;: &quot;True&quot;,&#xd;
                    &quot;ApplicantGender&quot;: &quot;0&quot;,&#xd;
                    &quot;ApplicantRelationship&quot;: &quot;Self&quot;,&#xd;
                    &quot;ApplicantZip&quot;: &quot;90010&quot;,&#xd;
                    &quot;ApplicantCity&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;ApplicantCounty&quot;: &quot;06037&quot;,&#xd;
                    &quot;ApplicantCountyName&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;ApplicantState&quot;: &quot;CA&quot;,&#xd;
                    &quot;ApplicantDemoState&quot;: &quot;CA&quot;,&#xd;
                    &quot;ApplicantMemberID&quot;: &quot;5935870&quot;,&#xd;
                    &quot;RptApplicantRelationship_0&quot;: &quot;Self&quot;,&#xd;
                    &quot;RptProductSelected_0&quot;: &quot;NONE&quot;,&#xd;
                    &quot;UserType&quot;: &quot;CONSUMER&quot;,&#xd;
                    &quot;HTTPReferrer&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;ReferringDomain&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;IsPreview&quot;: &quot;False&quot;,&#xd;
                    &quot;AppID&quot;: &quot;4000&quot;,&#xd;
                    &quot;ClientName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;AppDomainOrName&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;RepeaterNumber&quot;: &quot;1&quot;,&#xd;
                    &quot;PlanID&quot;: &quot;282564&quot;,&#xd;
                    &quot;PlanName&quot;: &quot;flexcare MAPD plan 3&quot;,&#xd;
                    &quot;PlanType&quot;: &quot;MAPD&quot;,&#xd;
                    &quot;PlanYear&quot;: &quot;2022&quot;,&#xd;
                    &quot;CarrierName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;CarrierID&quot;: &quot;257&quot;,&#xd;
                    &quot;ExternalID&quot;: &quot;H9999&quot;,&#xd;
                    &quot;ExternalSegmentID&quot;: &quot;257&quot;,&#xd;
                    &quot;ExternalPlanID&quot;: &quot;013&quot;,&#xd;
                    &quot;PlanSubType&quot;: &quot;HMO&quot;,&#xd;
                    &quot;PlanTypeSubType&quot;: &quot;MAPDHMO&quot;,&#xd;
                    &quot;PlanSegment&quot;: &quot;H9999-013-257&quot;,&#xd;
                    &quot;SelectedPlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;CurrentEnrollment_PlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;CurrentEnrollment_IsMedigap&quot;: &quot;False&quot;,&#xd;
                    &quot;EnrollmentPlanYear&quot;: &quot;2022&quot;,&#xd;
                    &quot;PlanPremiumMonthly&quot;: &quot;$33.00&quot;,&#xd;
                    &quot;PlanPremium&quot;: &quot;33.00&quot;,&#xd;
                    &quot;PlanSNPType&quot;: &quot;NOT_SNP&quot;,&#xd;
                    &quot;NationalProviderNumber&quot;: &quot;1234567&quot;,&#xd;
                    &quot;CurrentDate&quot;: &quot;07/06/2022&quot;,&#xd;
                    &quot;DisplaySEP&quot;: &quot;true&quot;,&#xd;
                    &quot;CountyFIPS&quot;: &quot;06037&quot;,&#xd;
                    &quot;WebsiteURL&quot;: &quot;https://www.connecture.com&quot;,&#xd;
                    &quot;DestinationClientName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;OrgName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;EnrollAddress1&quot;: &quot;123 Any Street&quot;,&#xd;
                    &quot;EnrollCity&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;EnrollState&quot;: &quot;CA&quot;,&#xd;
                    &quot;EnrollZIP&quot;: &quot;90010&quot;,&#xd;
                    &quot;EnrollPhone&quot;: &quot;1-800-379-90&quot;,&#xd;
                    &quot;EnrollTTY&quot;: &quot;711&quot;,&#xd;
                    &quot;EnrollHours&quot;: &quot;8 am - 8 pm central time&quot;,&#xd;
                    &quot;ZipCode&quot;: &quot;90010&quot;,&#xd;
                    &quot;County_FIPS&quot;: &quot;06037&quot;,&#xd;
                    &quot;TierServiceCalled&quot;: &quot;false&quot;,&#xd;
                    &quot;authSignature&quot;: &quot;N&quot;,&#xd;
                    &quot;Age65AsOfEffectiveDate&quot;: &quot;N&quot;,&#xd;
                    &quot;Age65InLast6MonthsOfEffectiveDate&quot;: &quot;N&quot;,&#xd;
                    &quot;MedicarePartBInLast6Months&quot;: &quot;N&quot;,&#xd;
                    &quot;utm_source&quot;: &quot;pc1&quot;,&#xd;
                    &quot;utm_medium&quot;: &quot;email&quot;,&#xd;
                    &quot;utm_campaign&quot;: &quot;bpml&quot;,&#xd;
                    &quot;InternalPlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;PlanIDs&quot;: &quot;282564&quot;,&#xd;
                    &quot;IsMedigap&quot;: &quot;False&quot;,&#xd;
                    &quot;FormType&quot;: &quot;LongForm&quot;,&#xd;
                    &quot;AgencyName&quot;: &quot;&quot;,&#xd;
                    &quot;AgencyID&quot;: &quot;&quot;,&#xd;
                    &quot;AlzheimersDiseaseOrDementia&quot;: &quot;&quot;,&#xd;
                    &quot;AnginaOrHeartAttack&quot;: &quot;&quot;,&#xd;
                    &quot;AnxietyOrMildDepression&quot;: &quot;&quot;,&#xd;
                    &quot;Asthma&quot;: &quot;&quot;,&#xd;
                    &quot;AthritisHipKnee&quot;: &quot;&quot;,&#xd;
                    &quot;AtrialFibrillationOrFlutter&quot;: &quot;&quot;,&#xd;
                    &quot;BipolarOrSchizophrenia&quot;: &quot;&quot;,&#xd;
                    &quot;CancersOrTumors&quot;: &quot;&quot;,&#xd;
                    &quot;ChronsDiseaseOrUlcerativeColitis&quot;: &quot;&quot;,&#xd;
                    &quot;CongestiveHeartFailure&quot;: &quot;&quot;,&#xd;
                    &quot;CoronaryOrCarotidArteryDisease&quot;: &quot;&quot;,&#xd;
                    &quot;Diabetes&quot;: &quot;&quot;,&#xd;
                    &quot;DiabetesNoComplications&quot;: &quot;&quot;,&#xd;
                    &quot;EnlargedProstate&quot;: &quot;&quot;,&#xd;
                    &quot;Fibromyalgia&quot;: &quot;&quot;,&#xd;
                    &quot;GERDAcidReflux&quot;: &quot;&quot;,&#xd;
                    &quot;GlaucomaOrMacularDegeneration&quot;: &quot;&quot;,&#xd;
                    &quot;HighBloodPressure&quot;: &quot;&quot;,&#xd;
                    &quot;HighCholesterol&quot;: &quot;&quot;,&#xd;
                    &quot;HypothyroidismOrHyperthyroidism&quot;: &quot;&quot;,&#xd;
                    &quot;KidneyConditions&quot;: &quot;&quot;,&#xd;
                    &quot;LiverConditions&quot;: &quot;&quot;,&#xd;
                    &quot;LungOrRespiratoryConditions&quot;: &quot;&quot;,&#xd;
                    &quot;Lupus&quot;: &quot;&quot;,&#xd;
                    &quot;MajorDepression&quot;: &quot;&quot;,&#xd;
                    &quot;MedicalQuestionDialysis&quot;: &quot;&quot;,&#xd;
                    &quot;MedicalConditionPastTwoYears&quot;: &quot;&quot;,&#xd;
                    &quot;Migraines&quot;: &quot;&quot;,&#xd;
                    &quot;MultipleSclerosis&quot;: &quot;&quot;,&#xd;
                    &quot;MyastheniaGravis&quot;: &quot;&quot;,&#xd;
                    &quot;Osteoporosis&quot;: &quot;&quot;,&#xd;
                    &quot;OtherImmuneDeficiency&quot;: &quot;&quot;,&#xd;
                    &quot;ParkinsonsDisease&quot;: &quot;&quot;,&#xd;
                    &quot;Psoriasis&quot;: &quot;&quot;,&#xd;
                    &quot;RhuematoidArthritis&quot;: &quot;&quot;,&#xd;
                    &quot;AuthSignature&quot;: &quot;N&quot;,&#xd;
                    &quot;NoneOfTheseApplyQA&quot;: &quot;&quot;,&#xd;
                    &quot;NoneOfTheseApplyQB&quot;: &quot;&quot;,&#xd;
                    &quot;NoconditionApplyC&quot;: &quot;&quot;,&#xd;
                    &quot;NoneOfTheseApply&quot;: &quot;&quot;,&#xd;
                    &quot;Utm_source&quot;: &quot;pc1&quot;,&#xd;
                    &quot;Utm_medium&quot;: &quot;email&quot;,&#xd;
                    &quot;Utm_campaign&quot;: &quot;bpml&quot;&#xd;
                },&#xd;
                &quot;OverrideData&quot;: &quot;&quot;,&#xd;
                &quot;FormInfo&quot;: {&#xd;
                    &quot;ReturnURL&quot;: &quot;https://ankur-ipc.qa.destinationrx.com/PC/2022/Enrollment/Confirmation&quot;&#xd;
                },&#xd;
                &quot;SiteID&quot;: &quot;4bc2384c-6942-ec11-a326-005056961565&quot;,&#xd;
                &quot;Language&quot;: &quot;en-US&quot;,&#xd;
                &quot;UserType&quot;: &quot;Consumer&quot;&#xd;
            }&#xd;
        },&#xd;
        &quot;overrideStoredAnswers&quot;: true,&#xd;
        &quot;partnerID&quot;: &quot;&quot;,&#xd;
        &quot;sourceID&quot;: &quot;&quot;,&#xd;
        &quot;langID&quot;: 1,&#xd;
        &quot;pageIndex&quot;: 0,&#xd;
        &quot;createdIPAddress&quot;: &quot;172.58.60.171&quot;,&#xd;
        &quot;ssoTag&quot;: &quot;68CJ0WSA&quot;,&#xd;
        &quot;formTypes&quot;: &quot;0&quot;,&#xd;
        &quot;currentFormType&quot;: &quot;0&quot;,&#xd;
        &quot;usingBEAN&quot;: &quot;true&quot;,&#xd;
        &quot;siteID&quot;: &quot;4bc2384c-6942-ec11-a326-005056961565&quot;,&#xd;
        &quot;isFormChaining&quot;: &quot;False&quot;,&#xd;
        &quot;groupConfirmationNumber&quot;: null,&#xd;
        &quot;selectedCultureCode&quot;: &quot;en-US&quot;,&#xd;
        &quot;planID&quot;: &quot;282564&quot;,&#xd;
        &quot;planIDs&quot;: &quot;282564&quot;,&#xd;
        &quot;isMedigap&quot;: false,&#xd;
        &quot;formType&quot;: &quot;LongForm&quot;,&#xd;
        &quot;groupId&quot;: &quot;0&quot;,&#xd;
        &quot;integrationType&quot;: &quot;0&quot;,&#xd;
        &quot;formID&quot;: &quot;61f68510-efa6-4d16-b2e2-186086dbd830&quot;,&#xd;
        &quot;userType&quot;: &quot;CONSUMER&quot;,&#xd;
        &quot;publicFormID&quot;: &quot;61f68510-efa6-4d16-b2e2-186086dbd830&quot;,&#xd;
        &quot;destinationAppID&quot;: &quot;4000&quot;,&#xd;
        &quot;originalAppID&quot;: 4000,&#xd;
        &quot;sourceSiteID&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;isMedigap&quot;: false,&#xd;
    &quot;isSiteLive&quot;: false,&#xd;
    &quot;isReviewSite&quot;: false,&#xd;
    &quot;callRecordingCode&quot;: null,&#xd;
    &quot;isPurl&quot;: true,&#xd;
    &quot;planRanking&quot;: 2,&#xd;
    &quot;bestMatchPlanId&quot;: &quot;none&quot;,&#xd;
    &quot;bestMatchPlanType&quot;: &quot;n/a&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/1NKM6813Q3/Enroll?sendToBeneficiary=false&amp;planId=1N1JZPBJKK</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Plan enroll JSON" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;Custom1&quot;: &quot;6bb9ffdc-3e74-4f56-824b-93cb1e9dcd80&quot;,&#xd;
    &quot;Custom2&quot;: &quot;sent to member&quot;,&#xd;
    &quot;CustomInternal&quot;: {&#xd;
        &quot;StoringData&quot;: {&#xd;
            &quot;AgentFirstName&quot;: &quot;Kamille&quot;,&#xd;
            &quot;AgentNPN&quot;: &quot;16681169&quot;,&#xd;
            &quot;AgentLastName&quot;: &quot;Gray&quot;,&#xd;
            &quot;ApplicantHICN&quot;: &quot;xxxxxxxxxx&quot;,&#xd;
            &quot;PartAEffectiveDate&quot;: &quot;2018-08-01&quot;,&#xd;
            &quot;PartBEffectiveDate&quot;: &quot;2018-08-01&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;Enrollee&quot;: {&#xd;
        &quot;Address1&quot;: &quot;123 Main&quot;,&#xd;
        &quot;Address2&quot;: &quot;&quot;,&#xd;
        &quot;City&quot;: &quot;Itasca&quot;,&#xd;
        &quot;CountyFIPS&quot;: &quot;06037&quot;,&#xd;
        &quot;DateOfBirth&quot;: &quot;1953-08-06&quot;,&#xd;
        &quot;Effective Date&quot;: &quot;2022-03-01&quot;,&#xd;
        &quot;Email&quot;: &quot;drxtest@mac.com&quot;,&#xd;
        &quot;FirstName&quot;: &quot;DRXtest&quot;,&#xd;
        &quot;Gender&quot;: &quot;F&quot;,&#xd;
        &quot;LastName&quot;: &quot;DRXtest&quot;,&#xd;
        &quot;MiddleInitial&quot;: &quot;&quot;,&#xd;
        &quot;PhoneNumber&quot;: &quot;2245755555&quot;,&#xd;
        &quot;State&quot;: &quot;IL&quot;,&#xd;
        &quot;Title&quot;: &quot;&quot;,&#xd;
        &quot;Zip&quot;: &quot;90010&quot;&#xd;
    },&#xd;
    &quot;Enroller&quot;: {&#xd;
        &quot;AID&quot;: &quot;&quot;,&#xd;
        &quot;BLUserName&quot;: &quot;16681169&quot;,&#xd;
        &quot;BrokerID&quot;: &quot;1855043&quot;,&#xd;
        &quot;ChannelID&quot;: &quot;&quot;,&#xd;
        &quot;PartnerID&quot;: &quot;CH582&quot;,&#xd;
        &quot;UserType&quot;: &quot;Consumer&quot;&#xd;
    },&#xd;
    &quot;Language&quot;: &quot;en-US&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/1T25YTV16T/Enroll?sendToBeneficiary=false</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Plan enroll JSON Minimum" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;Custom1&quot;: &quot;FAEtokfUXjPurUwkE7Qv1MFHw9Ji0xu2KiNYoLgFW9WTLa0Wqb&quot;,&#xd;
    &quot;Custom2&quot;: &quot;unregistered-1d57f287-a8dd-40c9-817a-6cff99115711&quot;,&#xd;
    &quot;CustomInternal&quot;: {&#xd;
        &quot;StoringData&quot;: {}&#xd;
    },&#xd;
    &quot;Enroller&quot;: {&#xd;
        &quot;PartnerID&quot;: &quot;AIS620&quot;&#xd;
    },&#xd;
    &quot;Enrollee&quot;: {&#xd;
        &quot;Zip&quot;: &quot;90210&quot;,&#xd;
        &quot;CountyFIPS&quot;: &quot;06037&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/1TT73K2T8N/Enroll?sendToBeneficiary=false&amp;riderIDs=18883054BN</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Plan Count" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022-09-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/PlanCount</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plans SCS-43234" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">98055</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Zip</stringProp>
              </elementProp>
              <elementProp name="FIPS" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">53033</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FIPS</stringProp>
              </elementProp>
              <elementProp name="EffectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022-01-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">EffectiveDate</stringProp>
              </elementProp>
              <elementProp name="showFormulary" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showFormulary</stringProp>
              </elementProp>
              <elementProp name="showPharmacy" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showPharmacy</stringProp>
              </elementProp>
              <elementProp name="showDefaultPharmacyPricing" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showDefaultPharmacyPricing</stringProp>
              </elementProp>
              <elementProp name="showDefault" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showDefault</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plan details hardcoded" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">98055</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Zip</stringProp>
              </elementProp>
              <elementProp name="FIPS" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">53033</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FIPS</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/${ID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plans - many params" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">90210</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Zip</stringProp>
              </elementProp>
              <elementProp name="FIPS" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FIPS</stringProp>
              </elementProp>
              <elementProp name="Year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2023</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Year</stringProp>
              </elementProp>
              <elementProp name="PlanType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">PlanType</stringProp>
              </elementProp>
              <elementProp name="returnallmedicareplans" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">returnallmedicareplans</stringProp>
              </elementProp>
              <elementProp name="showPharmacy" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showPharmacy</stringProp>
              </elementProp>
              <elementProp name="showFormulary" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showFormulary</stringProp>
              </elementProp>
              <elementProp name="showDefaultPharmacyPricing" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showDefaultPharmacyPricing</stringProp>
              </elementProp>
              <elementProp name="EffectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2021-06-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">EffectiveDate</stringProp>
              </elementProp>
              <elementProp name="generaltext" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">generaltext</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plans WTW issue" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">9/1/2021 7:00:00 PM</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="showFormulary" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showFormulary</stringProp>
              </elementProp>
              <elementProp name="showPharmacy" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showPharmacy</stringProp>
              </elementProp>
              <elementProp name="showDefaultPharmacyPricing" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showDefaultPharmacyPricing</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Medigap plans" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10-01-2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Dental plans" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">78381</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">48007</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2022-09-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">6</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Vision plans" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2022-09-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">8</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get HIP plans " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10-01-2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">12</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plan details" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2022-09-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="showFormulary" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showFormulary</stringProp>
              </elementProp>
              <elementProp name="showPharmacy" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showPharmacy</stringProp>
              </elementProp>
              <elementProp name="showDefaultPharmacyPricing" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showDefaultPharmacyPricing</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/session/${SessionID}/Plans/${ID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plan details MedSup" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Zip</stringProp>
              </elementProp>
              <elementProp name="FIPS" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FIPS</stringProp>
              </elementProp>
              <elementProp name="showdefaultpharmacypricing" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showdefaultpharmacypricing</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2022-02-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/${ID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plan details Dental" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2022-01-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="ShowAllPlanObjects" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">ShowAllPlanObjects</stringProp>
              </elementProp>
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/${ID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plan details Vision" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2022-01-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="ShowAllPlanObjects" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">ShowAllPlanObjects</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/${ID}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plans PlanSmart" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">95828</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">06067</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="PlanType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">PlanType</stringProp>
              </elementProp>
              <elementProp name="showPharmacy" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showPharmacy</stringProp>
              </elementProp>
              <elementProp name="showFormulary" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showFormulary</stringProp>
              </elementProp>
              <elementProp name="showDefault" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showDefault</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PlanSmart/Get plans" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">55305</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="FIPS" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">27053</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FIPS</stringProp>
              </elementProp>
              <elementProp name="showFormulary" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showFormulary</stringProp>
              </elementProp>
              <elementProp name="showPharmacy" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showPharmacy</stringProp>
              </elementProp>
              <elementProp name="showDefaultPharmacyPricing" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">False</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showDefaultPharmacyPricing</stringProp>
              </elementProp>
              <elementProp name="showDefault" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">showDefault</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PlanSmart/Create Session" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {   &#xd;
        &quot;Zip&quot;: &quot;95747&quot;,&#xd;
        &quot;Fips&quot;: &quot;06061&quot;,&#xd;
        &quot;SSOValue&quot;: &quot;FD7A97D1-3E8C-E711-BFB7-0025B500003D&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apiplancompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Plans (JSON)-Need valid test data" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.Header;
String token = props.get(&quot;token&quot;);
log.info(&quot;\n\n\n***************run time token is  &quot; + token);
log.info(&quot;\n\n\n***************Bearer token is  &quot; + &quot;Bearer&quot; +token);
sampler.getHeaderManager().add(new Header(&quot;Authorization&quot;,&quot;Bearer&quot; +token));</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" Create session" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;HealthStatus&quot;: &quot;3&quot;,&#xd;
        &quot;Birthdate&quot;: &quot;01-01-1960&quot;,&#xd;
        &quot;EffectiveDate&quot;: &quot;09-01-2022&quot;,&#xd;
        &quot;SubsidyLevel&quot;: &quot;4&quot;,&#xd;
        &quot;Zip&quot;: &quot;90010&quot;,&#xd;
        &quot;Fips&quot;: &quot;06037&quot;,&#xd;
        &quot;IsPrimary&quot;: false,&#xd;
        &quot;Profile&quot;: {&#xd;
            &quot;FirstName&quot;: &quot;AnkurQA&quot;,&#xd;
            &quot;LastName&quot;: &quot;DesaiQA&quot;,&#xd;
            &quot;PartAEffectiveDate&quot;: &quot;05-01-2022&quot;,&#xd;
            &quot;PartBEffectiveDate&quot;: &quot;09-01-2022&quot;,&#xd;
            &quot;MBI&quot;: &quot;1AA1AA1AA11&quot;&#xd;
        },&#xd;
        &quot;Dosages&quot;: [&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;00071015523&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;30698006001&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;51991081801&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            }&#xd;
        ],&#xd;
        &quot;Pharmacies&quot;: [&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 0,&#xd;
                &quot;PharmacyID&quot;: &quot;K3RC2&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 1,&#xd;
                &quot;PharmacyID&quot;: &quot;3684847&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 2,&#xd;
                &quot;PharmacyID&quot;: &quot;1770598823&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            }&#xd;
        ],&#xd;
        &quot;reqid&quot;: &quot;5&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">SessionID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">[0].SessionID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetPlans" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans?zip=90010&amp;fips=06037&amp;year=2022&amp;effectiveDate=2022-09-01&amp;planType=2</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">MedicarePlans[0].ID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Enroll(Need updation)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;CustomInternal&quot;: {&#xd;
        &quot;StoringData&quot;: {&#xd;
            &quot;PartAEffectiveDate&quot;: &quot;01/01/2022&quot;,&#xd;
            &quot;PartBEffectiveDate&quot;: &quot;01/01/2022&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;Enrollee&quot;: {&#xd;
        &quot;Address1&quot;: &quot;1234 Main Street&quot;,&#xd;
        &quot;Address2&quot;: &quot;#2B&quot;,&#xd;
        &quot;DateOfBirth&quot;: &quot;03-14-1940&quot;,&#xd;
        &quot;City&quot;: &quot;Los Angeles&quot;,&#xd;
        &quot;CountyFIPS&quot;: &quot;06037&quot;,&#xd;
        &quot;EffectiveDate&quot;: &quot;04-01-2022&quot;,&#xd;
        &quot;Email&quot;: &quot;bsmith@test.com&quot;,&#xd;
        &quot;FirstName&quot;: &quot;ben&quot;,&#xd;
        &quot;Gender&quot;: &quot;M&quot;,&#xd;
        &quot;LastName&quot;: &quot;smith&quot;,&#xd;
        &quot;MiddleInitial&quot;: &quot;M&quot;,&#xd;
        &quot;PhoneNumber&quot;: &quot;8174223434&quot;,&#xd;
        &quot;State&quot;: &quot;CA&quot;,&#xd;
        &quot;Title&quot;: &quot;&quot;,&#xd;
        &quot;Zip&quot;: &quot;90210&quot;&#xd;
    },&#xd;
    &quot;Enroller&quot;: {&#xd;
        &quot;BrokerID&quot;: &quot;1234567&quot;,&#xd;
        &quot;PartnerID&quot;: &quot;CNXR1&quot;,&#xd;
        &quot;UserType&quot;: &quot;BROKER&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">APIPlanCompare/v1/Session/${SessionID}/Plans/1888YR9051/Enroll?sendToBeneficiary=false&amp;effectiveDate=07-01-2022</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Plan enroll(needUpdation)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;payload&quot;: {&#xd;
        &quot;customInternal&quot;: {&#xd;
            &quot;CustomInternal&quot;: {&#xd;
                &quot;StoringData&quot;: {&#xd;
                    &quot;AgentID&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentFirstName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentLastName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentGuid&quot;: &quot;3b7ab13d-e6c9-4991-b003-f41c0db9901d&quot;,&#xd;
                    &quot;ExternalAgentID&quot;: &quot;SSOAgent999&quot;,	&#xd;
                    &quot;AgentEmail&quot;: &quot;desaiconnecturetest@gmail.com&quot;,&#xd;
                    &quot;AgentUserName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentState&quot;: &quot;CA&quot;,&#xd;
                    &quot;AgentAddress1&quot;: &quot;123 Any Street&quot;,&#xd;
                    &quot;AgentCity&quot;: &quot;Anytown&quot;,&#xd;
                    &quot;AgentZipCode&quot;: &quot;90010&quot;,&#xd;
                    &quot;AgentCellNumber&quot;: &quot;7085555555&quot;,&#xd;
                    &quot;AgentNPN&quot;: &quot;1234567&quot;,&#xd;
                    &quot;HasAgentContext&quot;: &quot;True&quot;,&#xd;
                    &quot;ApplicantGender&quot;: &quot;0&quot;,&#xd;
                    &quot;ApplicantRelationship&quot;: &quot;Self&quot;,&#xd;
                    &quot;ApplicantZip&quot;: &quot;90010&quot;,&#xd;
                    &quot;ApplicantCity&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;ApplicantCounty&quot;: &quot;06037&quot;,&#xd;
                    &quot;ApplicantCountyName&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;ApplicantState&quot;: &quot;CA&quot;,&#xd;
                    &quot;ApplicantDemoState&quot;: &quot;CA&quot;,&#xd;
                    &quot;ApplicantMemberID&quot;: &quot;5935870&quot;,&#xd;
                    &quot;RptApplicantRelationship_0&quot;: &quot;Self&quot;,&#xd;
                    &quot;RptProductSelected_0&quot;: &quot;NONE&quot;,&#xd;
                    &quot;UserType&quot;: &quot;CONSUMER&quot;,&#xd;
                    &quot;HTTPReferrer&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;ReferringDomain&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;IsPreview&quot;: &quot;False&quot;,&#xd;
                    &quot;AppID&quot;: &quot;4000&quot;,&#xd;
                    &quot;ClientName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;AppDomainOrName&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;PlanID&quot;: &quot;282564&quot;,&#xd;
                    &quot;PlanName&quot;: &quot;flexcare MAPD plan 3&quot;,&#xd;
                    &quot;PlanType&quot;: &quot;MAPD&quot;,&#xd;
                    &quot;PlanYear&quot;: &quot;2022&quot;,&#xd;
                    &quot;CarrierName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;CarrierID&quot;: &quot;257&quot;,&#xd;
                    &quot;ExternalID&quot;: &quot;H9999&quot;,&#xd;
                    &quot;ExternalSegmentID&quot;: &quot;257&quot;,&#xd;
                    &quot;ExternalPlanID&quot;: &quot;013&quot;,&#xd;
                    &quot;PlanSubType&quot;: &quot;HMO&quot;,&#xd;
                    &quot;PlanTypeSubType&quot;: &quot;MAPDHMO&quot;,&#xd;
                    &quot;PlanSegment&quot;: &quot;H9999-013-257&quot;,&#xd;
                    &quot;SelectedPlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;CurrentEnrollment_PlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;CurrentEnrollment_IsMedigap&quot;: &quot;False&quot;,&#xd;
                    &quot;EnrollmentPlanYear&quot;: &quot;2022&quot;,&#xd;
                    &quot;PlanPremiumMonthly&quot;: &quot;$33.00&quot;,&#xd;
                    &quot;PlanPremium&quot;: &quot;33.00&quot;,&#xd;
                    &quot;PlanSNPType&quot;: &quot;NOT_SNP&quot;,&#xd;
                    &quot;NationalProviderNumber&quot;: &quot;1234567&quot;,&#xd;
                    &quot;CurrentDate&quot;: &quot;07/06/2022&quot;,&#xd;
                    &quot;DisplaySEP&quot;: &quot;true&quot;,&#xd;
                    &quot;CountyFIPS&quot;: &quot;06037&quot;,&#xd;
                    &quot;WebsiteURL&quot;: &quot;https://www.connecture.com&quot;,&#xd;
                    &quot;DestinationClientName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;OrgName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;EnrollAddress1&quot;: &quot;123 Any Street&quot;,&#xd;
                    &quot;EnrollCity&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;EnrollState&quot;: &quot;CA&quot;,&#xd;
                    &quot;EnrollZIP&quot;: &quot;90010&quot;,&#xd;
                    &quot;EnrollPhone&quot;: &quot;1-800-379-90&quot;,&#xd;
                    &quot;EnrollTTY&quot;: &quot;711&quot;,&#xd;
                    &quot;EnrollHours&quot;: &quot;8 am - 8 pm central time&quot;,&#xd;
                    &quot;ZipCode&quot;: &quot;90010&quot;,&#xd;
                    &quot;County_FIPS&quot;: &quot;06037&quot;,&#xd;
                    &quot;TierServiceCalled&quot;: &quot;false&quot;,&#xd;
                    &quot;authSignature&quot;: &quot;N&quot;,&#xd;
                    &quot;Age65AsOfEffectiveDate&quot;: &quot;N&quot;,&#xd;
                    &quot;Age65InLast6MonthsOfEffectiveDate&quot;: &quot;N&quot;,&#xd;
                    &quot;MedicarePartBInLast6Months&quot;: &quot;N&quot;,&#xd;
                    &quot;utm_source&quot;: &quot;pc1&quot;,&#xd;
                    &quot;utm_medium&quot;: &quot;email&quot;,&#xd;
                    &quot;utm_campaign&quot;: &quot;bpml&quot;,&#xd;
                    &quot;RepeaterNumber&quot;: &quot;1&quot;,&#xd;
                    &quot;InternalPlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;PlanIDs&quot;: &quot;282564&quot;,&#xd;
                    &quot;IsMedigap&quot;: &quot;False&quot;,&#xd;
                    &quot;FormType&quot;: &quot;LongForm&quot;,&#xd;
                    &quot;AgencyName&quot;: &quot;&quot;,&#xd;
                    &quot;AgencyID&quot;: &quot;&quot;,&#xd;
                    &quot;AlzheimersDiseaseOrDementia&quot;: &quot;&quot;,&#xd;
                    &quot;AnginaOrHeartAttack&quot;: &quot;&quot;,&#xd;
                    &quot;AnxietyOrMildDepression&quot;: &quot;&quot;,&#xd;
                    &quot;Asthma&quot;: &quot;&quot;,&#xd;
                    &quot;AthritisHipKnee&quot;: &quot;&quot;,&#xd;
                    &quot;AtrialFibrillationOrFlutter&quot;: &quot;&quot;,&#xd;
                    &quot;BipolarOrSchizophrenia&quot;: &quot;&quot;,&#xd;
                    &quot;CancersOrTumors&quot;: &quot;&quot;,&#xd;
                    &quot;ChronsDiseaseOrUlcerativeColitis&quot;: &quot;&quot;,&#xd;
                    &quot;CongestiveHeartFailure&quot;: &quot;&quot;,&#xd;
                    &quot;CoronaryOrCarotidArteryDisease&quot;: &quot;&quot;,&#xd;
                    &quot;Diabetes&quot;: &quot;&quot;,&#xd;
                    &quot;DiabetesNoComplications&quot;: &quot;&quot;,&#xd;
                    &quot;EnlargedProstate&quot;: &quot;&quot;,&#xd;
                    &quot;Fibromyalgia&quot;: &quot;&quot;,&#xd;
                    &quot;GERDAcidReflux&quot;: &quot;&quot;,&#xd;
                    &quot;GlaucomaOrMacularDegeneration&quot;: &quot;&quot;,&#xd;
                    &quot;HighBloodPressure&quot;: &quot;&quot;,&#xd;
                    &quot;HighCholesterol&quot;: &quot;&quot;,&#xd;
                    &quot;HypothyroidismOrHyperthyroidism&quot;: &quot;&quot;,&#xd;
                    &quot;KidneyConditions&quot;: &quot;&quot;,&#xd;
                    &quot;LiverConditions&quot;: &quot;&quot;,&#xd;
                    &quot;LungOrRespiratoryConditions&quot;: &quot;&quot;,&#xd;
                    &quot;Lupus&quot;: &quot;&quot;,&#xd;
                    &quot;MajorDepression&quot;: &quot;&quot;,&#xd;
                    &quot;MedicalQuestionDialysis&quot;: &quot;&quot;,&#xd;
                    &quot;MedicalConditionPastTwoYears&quot;: &quot;&quot;,&#xd;
                    &quot;Migraines&quot;: &quot;&quot;,&#xd;
                    &quot;MultipleSclerosis&quot;: &quot;&quot;,&#xd;
                    &quot;MyastheniaGravis&quot;: &quot;&quot;,&#xd;
                    &quot;Osteoporosis&quot;: &quot;&quot;,&#xd;
                    &quot;OtherImmuneDeficiency&quot;: &quot;&quot;,&#xd;
                    &quot;ParkinsonsDisease&quot;: &quot;&quot;,&#xd;
                    &quot;Psoriasis&quot;: &quot;&quot;,&#xd;
                    &quot;RhuematoidArthritis&quot;: &quot;&quot;,&#xd;
                    &quot;AuthSignature&quot;: &quot;N&quot;,&#xd;
                    &quot;NoneOfTheseApplyQA&quot;: &quot;&quot;,&#xd;
                    &quot;NoneOfTheseApplyQB&quot;: &quot;&quot;,&#xd;
                    &quot;NoconditionApplyC&quot;: &quot;&quot;,&#xd;
                    &quot;NoneOfTheseApply&quot;: &quot;&quot;,&#xd;
                    &quot;Utm_source&quot;: &quot;pc1&quot;,&#xd;
                    &quot;Utm_medium&quot;: &quot;email&quot;,&#xd;
                    &quot;Utm_campaign&quot;: &quot;bpml&quot;&#xd;
                },&#xd;
                &quot;DynamicData&quot;: {&#xd;
                    &quot;AgentID&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentFirstName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentLastName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentGuid&quot;: &quot;3b7ab13d-e6c9-4991-b003-f41c0db9901d&quot;,&#xd;
                    &quot;ExternalAgentID&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentEmail&quot;: &quot;desaiconnecturetest@gmail.com&quot;,&#xd;
                    &quot;AgentUserName&quot;: &quot;SSOAgent999&quot;,&#xd;
                    &quot;AgentState&quot;: &quot;CA&quot;,&#xd;
                    &quot;AgentAddress1&quot;: &quot;123 Any Street&quot;,&#xd;
                    &quot;AgentCity&quot;: &quot;Anytown&quot;,&#xd;
                    &quot;AgentZipCode&quot;: &quot;90010&quot;,&#xd;
                    &quot;AgentCellNumber&quot;: &quot;7085555555&quot;,&#xd;
                    &quot;AgentNPN&quot;: &quot;1234567&quot;,&#xd;
                    &quot;HasAgentContext&quot;: &quot;True&quot;,&#xd;
                    &quot;ApplicantGender&quot;: &quot;0&quot;,&#xd;
                    &quot;ApplicantRelationship&quot;: &quot;Self&quot;,&#xd;
                    &quot;ApplicantZip&quot;: &quot;90010&quot;,&#xd;
                    &quot;ApplicantCity&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;ApplicantCounty&quot;: &quot;06037&quot;,&#xd;
                    &quot;ApplicantCountyName&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;ApplicantState&quot;: &quot;CA&quot;,&#xd;
                    &quot;ApplicantDemoState&quot;: &quot;CA&quot;,&#xd;
                    &quot;ApplicantMemberID&quot;: &quot;5935870&quot;,&#xd;
                    &quot;RptApplicantRelationship_0&quot;: &quot;Self&quot;,&#xd;
                    &quot;RptProductSelected_0&quot;: &quot;NONE&quot;,&#xd;
                    &quot;UserType&quot;: &quot;CONSUMER&quot;,&#xd;
                    &quot;HTTPReferrer&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;ReferringDomain&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;IsPreview&quot;: &quot;False&quot;,&#xd;
                    &quot;AppID&quot;: &quot;4000&quot;,&#xd;
                    &quot;ClientName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;AppDomainOrName&quot;: &quot;https://ankur-ipc.qa.destinationrx.com&quot;,&#xd;
                    &quot;RepeaterNumber&quot;: &quot;1&quot;,&#xd;
                    &quot;PlanID&quot;: &quot;282564&quot;,&#xd;
                    &quot;PlanName&quot;: &quot;flexcare MAPD plan 3&quot;,&#xd;
                    &quot;PlanType&quot;: &quot;MAPD&quot;,&#xd;
                    &quot;PlanYear&quot;: &quot;2022&quot;,&#xd;
                    &quot;CarrierName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;CarrierID&quot;: &quot;257&quot;,&#xd;
                    &quot;ExternalID&quot;: &quot;H9999&quot;,&#xd;
                    &quot;ExternalSegmentID&quot;: &quot;257&quot;,&#xd;
                    &quot;ExternalPlanID&quot;: &quot;013&quot;,&#xd;
                    &quot;PlanSubType&quot;: &quot;HMO&quot;,&#xd;
                    &quot;PlanTypeSubType&quot;: &quot;MAPDHMO&quot;,&#xd;
                    &quot;PlanSegment&quot;: &quot;H9999-013-257&quot;,&#xd;
                    &quot;SelectedPlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;CurrentEnrollment_PlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;CurrentEnrollment_IsMedigap&quot;: &quot;False&quot;,&#xd;
                    &quot;EnrollmentPlanYear&quot;: &quot;2022&quot;,&#xd;
                    &quot;PlanPremiumMonthly&quot;: &quot;$33.00&quot;,&#xd;
                    &quot;PlanPremium&quot;: &quot;33.00&quot;,&#xd;
                    &quot;PlanSNPType&quot;: &quot;NOT_SNP&quot;,&#xd;
                    &quot;NationalProviderNumber&quot;: &quot;1234567&quot;,&#xd;
                    &quot;CurrentDate&quot;: &quot;07/06/2022&quot;,&#xd;
                    &quot;DisplaySEP&quot;: &quot;true&quot;,&#xd;
                    &quot;CountyFIPS&quot;: &quot;06037&quot;,&#xd;
                    &quot;WebsiteURL&quot;: &quot;https://www.connecture.com&quot;,&#xd;
                    &quot;DestinationClientName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;OrgName&quot;: &quot;DRX Demo&quot;,&#xd;
                    &quot;EnrollAddress1&quot;: &quot;123 Any Street&quot;,&#xd;
                    &quot;EnrollCity&quot;: &quot;Los Angeles&quot;,&#xd;
                    &quot;EnrollState&quot;: &quot;CA&quot;,&#xd;
                    &quot;EnrollZIP&quot;: &quot;90010&quot;,&#xd;
                    &quot;EnrollPhone&quot;: &quot;1-800-379-90&quot;,&#xd;
                    &quot;EnrollTTY&quot;: &quot;711&quot;,&#xd;
                    &quot;EnrollHours&quot;: &quot;8 am - 8 pm central time&quot;,&#xd;
                    &quot;ZipCode&quot;: &quot;90010&quot;,&#xd;
                    &quot;County_FIPS&quot;: &quot;06037&quot;,&#xd;
                    &quot;TierServiceCalled&quot;: &quot;false&quot;,&#xd;
                    &quot;authSignature&quot;: &quot;N&quot;,&#xd;
                    &quot;Age65AsOfEffectiveDate&quot;: &quot;N&quot;,&#xd;
                    &quot;Age65InLast6MonthsOfEffectiveDate&quot;: &quot;N&quot;,&#xd;
                    &quot;MedicarePartBInLast6Months&quot;: &quot;N&quot;,&#xd;
                    &quot;utm_source&quot;: &quot;pc1&quot;,&#xd;
                    &quot;utm_medium&quot;: &quot;email&quot;,&#xd;
                    &quot;utm_campaign&quot;: &quot;bpml&quot;,&#xd;
                    &quot;InternalPlanId&quot;: &quot;282564&quot;,&#xd;
                    &quot;PlanIDs&quot;: &quot;282564&quot;,&#xd;
                    &quot;IsMedigap&quot;: &quot;False&quot;,&#xd;
                    &quot;FormType&quot;: &quot;LongForm&quot;,&#xd;
                    &quot;AgencyName&quot;: &quot;&quot;,&#xd;
                    &quot;AgencyID&quot;: &quot;&quot;,&#xd;
                    &quot;AlzheimersDiseaseOrDementia&quot;: &quot;&quot;,&#xd;
                    &quot;AnginaOrHeartAttack&quot;: &quot;&quot;,&#xd;
                    &quot;AnxietyOrMildDepression&quot;: &quot;&quot;,&#xd;
                    &quot;Asthma&quot;: &quot;&quot;,&#xd;
                    &quot;AthritisHipKnee&quot;: &quot;&quot;,&#xd;
                    &quot;AtrialFibrillationOrFlutter&quot;: &quot;&quot;,&#xd;
                    &quot;BipolarOrSchizophrenia&quot;: &quot;&quot;,&#xd;
                    &quot;CancersOrTumors&quot;: &quot;&quot;,&#xd;
                    &quot;ChronsDiseaseOrUlcerativeColitis&quot;: &quot;&quot;,&#xd;
                    &quot;CongestiveHeartFailure&quot;: &quot;&quot;,&#xd;
                    &quot;CoronaryOrCarotidArteryDisease&quot;: &quot;&quot;,&#xd;
                    &quot;Diabetes&quot;: &quot;&quot;,&#xd;
                    &quot;DiabetesNoComplications&quot;: &quot;&quot;,&#xd;
                    &quot;EnlargedProstate&quot;: &quot;&quot;,&#xd;
                    &quot;Fibromyalgia&quot;: &quot;&quot;,&#xd;
                    &quot;GERDAcidReflux&quot;: &quot;&quot;,&#xd;
                    &quot;GlaucomaOrMacularDegeneration&quot;: &quot;&quot;,&#xd;
                    &quot;HighBloodPressure&quot;: &quot;&quot;,&#xd;
                    &quot;HighCholesterol&quot;: &quot;&quot;,&#xd;
                    &quot;HypothyroidismOrHyperthyroidism&quot;: &quot;&quot;,&#xd;
                    &quot;KidneyConditions&quot;: &quot;&quot;,&#xd;
                    &quot;LiverConditions&quot;: &quot;&quot;,&#xd;
                    &quot;LungOrRespiratoryConditions&quot;: &quot;&quot;,&#xd;
                    &quot;Lupus&quot;: &quot;&quot;,&#xd;
                    &quot;MajorDepression&quot;: &quot;&quot;,&#xd;
                    &quot;MedicalQuestionDialysis&quot;: &quot;&quot;,&#xd;
                    &quot;MedicalConditionPastTwoYears&quot;: &quot;&quot;,&#xd;
                    &quot;Migraines&quot;: &quot;&quot;,&#xd;
                    &quot;MultipleSclerosis&quot;: &quot;&quot;,&#xd;
                    &quot;MyastheniaGravis&quot;: &quot;&quot;,&#xd;
                    &quot;Osteoporosis&quot;: &quot;&quot;,&#xd;
                    &quot;OtherImmuneDeficiency&quot;: &quot;&quot;,&#xd;
                    &quot;ParkinsonsDisease&quot;: &quot;&quot;,&#xd;
                    &quot;Psoriasis&quot;: &quot;&quot;,&#xd;
                    &quot;RhuematoidArthritis&quot;: &quot;&quot;,&#xd;
                    &quot;AuthSignature&quot;: &quot;N&quot;,&#xd;
                    &quot;NoneOfTheseApplyQA&quot;: &quot;&quot;,&#xd;
                    &quot;NoneOfTheseApplyQB&quot;: &quot;&quot;,&#xd;
                    &quot;NoconditionApplyC&quot;: &quot;&quot;,&#xd;
                    &quot;NoneOfTheseApply&quot;: &quot;&quot;,&#xd;
                    &quot;Utm_source&quot;: &quot;pc1&quot;,&#xd;
                    &quot;Utm_medium&quot;: &quot;email&quot;,&#xd;
                    &quot;Utm_campaign&quot;: &quot;bpml&quot;&#xd;
                },&#xd;
                &quot;OverrideData&quot;: &quot;&quot;,&#xd;
                &quot;FormInfo&quot;: {&#xd;
                    &quot;ReturnURL&quot;: &quot;https://ankur-ipc.qa.destinationrx.com/PC/2022/Enrollment/Confirmation&quot;&#xd;
                },&#xd;
                &quot;SiteID&quot;: &quot;4bc2384c-6942-ec11-a326-005056961565&quot;,&#xd;
                &quot;Language&quot;: &quot;en-US&quot;,&#xd;
                &quot;UserType&quot;: &quot;Consumer&quot;&#xd;
            }&#xd;
        },&#xd;
        &quot;overrideStoredAnswers&quot;: true,&#xd;
        &quot;partnerID&quot;: &quot;&quot;,&#xd;
        &quot;sourceID&quot;: &quot;&quot;,&#xd;
        &quot;langID&quot;: 1,&#xd;
        &quot;pageIndex&quot;: 0,&#xd;
        &quot;createdIPAddress&quot;: &quot;172.58.60.171&quot;,&#xd;
        &quot;ssoTag&quot;: &quot;68CJ0WSA&quot;,&#xd;
        &quot;formTypes&quot;: &quot;0&quot;,&#xd;
        &quot;currentFormType&quot;: &quot;0&quot;,&#xd;
        &quot;usingBEAN&quot;: &quot;true&quot;,&#xd;
        &quot;siteID&quot;: &quot;4bc2384c-6942-ec11-a326-005056961565&quot;,&#xd;
        &quot;isFormChaining&quot;: &quot;False&quot;,&#xd;
        &quot;groupConfirmationNumber&quot;: null,&#xd;
        &quot;selectedCultureCode&quot;: &quot;en-US&quot;,&#xd;
        &quot;planID&quot;: &quot;282564&quot;,&#xd;
        &quot;planIDs&quot;: &quot;282564&quot;,&#xd;
        &quot;isMedigap&quot;: false,&#xd;
        &quot;formType&quot;: &quot;LongForm&quot;,&#xd;
        &quot;groupId&quot;: &quot;0&quot;,&#xd;
        &quot;integrationType&quot;: &quot;0&quot;,&#xd;
        &quot;formID&quot;: &quot;61f68510-efa6-4d16-b2e2-186086dbd830&quot;,&#xd;
        &quot;userType&quot;: &quot;CONSUMER&quot;,&#xd;
        &quot;publicFormID&quot;: &quot;61f68510-efa6-4d16-b2e2-186086dbd830&quot;,&#xd;
        &quot;destinationAppID&quot;: &quot;4000&quot;,&#xd;
        &quot;originalAppID&quot;: 4000,&#xd;
        &quot;sourceSiteID&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;isMedigap&quot;: false,&#xd;
    &quot;isSiteLive&quot;: false,&#xd;
    &quot;isReviewSite&quot;: false,&#xd;
    &quot;callRecordingCode&quot;: null,&#xd;
    &quot;isPurl&quot;: true,&#xd;
    &quot;planRanking&quot;: 2,&#xd;
    &quot;bestMatchPlanId&quot;: &quot;none&quot;,&#xd;
    &quot;bestMatchPlanType&quot;: &quot;n/a&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/1NKM6813Q3/Enroll?sendToBeneficiary=false&amp;planId=1N1JZPBJKK</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Medigap plans(needUpdation)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans?zip=90010&amp;fips=06037&amp;year=2022&amp;effectiveDate=10-01-2022&amp;planType=2</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Dental plans(needUpdation)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans?zip=90010&amp;fips=06037&amp;effectiveDate=2022-09-01&amp;planType=6</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Vision plans(needUpdation)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans?zip=90010&amp;fips=06037&amp;effectiveDate=2022-09-01&amp;planType=8</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get HIP plans (needUpdation)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans?zip=90010&amp;fips=06037&amp;effectiveDate=10-01-2022&amp;planType=12</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plan details MedSup(needUpdation)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/${ID}?Zip=90010&amp;FIPS=06037&amp;showdefaultpharmacypricing=true&amp;effectiveDate=2022-02-01</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plan details Dental(needUpdation)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/${ID}?fips=06037&amp;effectiveDate=2022-01-01&amp;ShowAllPlanObjects=true&amp;zip=90010</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get plan details Vison(needUpdation)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/${ID}?zip=90010&amp;fips=06037&amp;effectiveDate=2022-01-01&amp;ShowAllPlanObjects=true</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Plans (XML)-Working" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.Header;
String token = props.get(&quot;token&quot;);
log.info(&quot;\n\n\n***************run time token is  &quot; + token);
log.info(&quot;\n\n\n***************Bearer token is  &quot; + &quot;Bearer&quot; +token);
sampler.getHeaderManager().add(new Header(&quot;Authorization&quot;,&quot;Bearer&quot; +token));</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" Create session" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;HealthStatus&quot;: &quot;3&quot;,&#xd;
        &quot;Birthdate&quot;: &quot;01-01-1960&quot;,&#xd;
        &quot;EffectiveDate&quot;: &quot;09-01-2022&quot;,&#xd;
        &quot;SubsidyLevel&quot;: &quot;4&quot;,&#xd;
        &quot;Zip&quot;: &quot;90010&quot;,&#xd;
        &quot;Fips&quot;: &quot;06037&quot;,&#xd;
        &quot;IsPrimary&quot;: false,&#xd;
        &quot;Profile&quot;: {&#xd;
            &quot;FirstName&quot;: &quot;AnkurQA&quot;,&#xd;
            &quot;LastName&quot;: &quot;DesaiQA&quot;,&#xd;
            &quot;PartAEffectiveDate&quot;: &quot;05-01-2022&quot;,&#xd;
            &quot;PartBEffectiveDate&quot;: &quot;09-01-2022&quot;,&#xd;
            &quot;MBI&quot;: &quot;1AA1AA1AA11&quot;&#xd;
        },&#xd;
        &quot;Dosages&quot;: [&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;00071015523&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;30698006001&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;51991081801&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            }&#xd;
        ],&#xd;
        &quot;Pharmacies&quot;: [&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 0,&#xd;
                &quot;PharmacyID&quot;: &quot;K3RC2&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 1,&#xd;
                &quot;PharmacyID&quot;: &quot;3684847&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 2,&#xd;
                &quot;PharmacyID&quot;: &quot;1770598823&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            }&#xd;
        ],&#xd;
        &quot;reqid&quot;: &quot;5&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">SessionID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">[0].SessionID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetPlans" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022-09-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Plan enroll with riders" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;EnrollmentSettings&gt;&#xd;
	&lt;Custom1&gt;Cust1&lt;/Custom1&gt;&#xd;
	&lt;Custom2&gt;Cust2&lt;/Custom2&gt;&#xd;
	&lt;Custom3&gt;Cust3&lt;/Custom3&gt;&#xd;
	&lt;Custom4&gt;Cust4&lt;/Custom4&gt;&#xd;
	&lt;Custom5&gt;Cust5&lt;/Custom5&gt;&#xd;
	&lt;EnrollDisplay&gt;&#xd;
		&lt;EnrollDisplay&gt;&#xd;
			&lt;KeyMessage&gt;AgentMessage&lt;/KeyMessage&gt;&#xd;
			&lt;ValueMessage&gt;Contact Customer Care&lt;/ValueMessage&gt;&#xd;
		&lt;/EnrollDisplay&gt;&#xd;
		&lt;EnrollDisplay&gt;&#xd;
			&lt;KeyMessage&gt;AgentMessage1&lt;/KeyMessage&gt;&#xd;
			&lt;ValueMessage&gt;1-855-685-9710&lt;/ValueMessage&gt;&#xd;
		&lt;/EnrollDisplay&gt;&#xd;
		&lt;EnrollDisplay&gt;&#xd;
			&lt;KeyMessage&gt;AgentMessage2&lt;/KeyMessage&gt;&#xd;
			&lt;ValueMessage&gt;TTY:1-977-486-2048&lt;/ValueMessage&gt;&#xd;
		&lt;/EnrollDisplay&gt;&#xd;
		&lt;EnrollDisplay&gt;&#xd;
			&lt;KeyMessage&gt;AgentMessage3&lt;/KeyMessage&gt;&#xd;
			&lt;ValueMessage&gt;Hours: M-F 8am-9pm CT&lt;/ValueMessage&gt;&#xd;
		&lt;/EnrollDisplay&gt;&#xd;
	&lt;/EnrollDisplay&gt;&#xd;
	&lt;Enrollee&gt;&#xd;
		&lt;Address1&gt;1234 Wells Street&lt;/Address1&gt;&#xd;
		&lt;Address2&gt;Suite 100&lt;/Address2&gt;&#xd;
		&lt;BirthDate&gt;1950-01-01&lt;/BirthDate&gt;&#xd;
		&lt;City&gt;Austin&lt;/City&gt;&#xd;
		&lt;CountyFIPS&gt;48453&lt;/CountyFIPS&gt;&#xd;
		&lt;DateOfBirth&gt;1950-01-01&lt;/DateOfBirth&gt;&#xd;
		&lt;EffectiveDate&gt;2021-01-01&lt;/EffectiveDate&gt;&#xd;
		&lt;Email&gt;test@connecture.com&lt;/Email&gt;&#xd;
		&lt;FirstName&gt;Testfirst&lt;/FirstName&gt;&#xd;
		&lt;Gender&gt;F&lt;/Gender&gt;&#xd;
		&lt;LastName&gt;Testlast&lt;/LastName&gt;&#xd;
		&lt;MiddleInitial&gt;R&lt;/MiddleInitial&gt;&#xd;
		&lt;PhoneNumber&gt;5555555555&lt;/PhoneNumber&gt;&#xd;
		&lt;SEPCMSReasonCODE&gt;NEW&lt;/SEPCMSReasonCODE&gt;&#xd;
		&lt;State&gt;TX&lt;/State&gt;&#xd;
		&lt;Title&gt;Ms&lt;/Title&gt;&#xd;
		&lt;Tobacco&gt;No&lt;/Tobacco&gt;&#xd;
		&lt;Zip&gt;73301&lt;/Zip&gt;&#xd;
	&lt;/Enrollee&gt;&#xd;
	&lt;Enroller&gt;&#xd;
		&lt;AID&gt;Affiliate&lt;/AID&gt;&#xd;
		&lt;BrokerID&gt;1234567&lt;/BrokerID&gt;&#xd;
		&lt;ChannelID&gt;&lt;/ChannelID&gt;&#xd;
		&lt;PartnerID&gt;SMS145&lt;/PartnerID&gt;&#xd;
		&lt;UserType&gt;BROKER&lt;/UserType&gt;&#xd;
	&lt;/Enroller&gt;&#xd;
	&lt;Language&gt;en-US&lt;/Language&gt;&#xd;
&lt;/EnrollmentSettings&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Plans/1N1JZPBJKK/Enroll?riderIDs=KTW43JCY9M,1JZP3TKQ91,1KV1Z9QKDL</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sessions (JSON)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.Header;
String token = props.get(&quot;token&quot;);
log.info(&quot;\n\n\n***************run time token is  &quot; + token);
log.info(&quot;\n\n\n***************Bearer token is  &quot; + &quot;Bearer&quot; +token);
sampler.getHeaderManager().add(new Header(&quot;Authorization&quot;,&quot;Bearer&quot; +token));</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Session" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;HealthStatus&quot;: &quot;3&quot;,&#xd;
        &quot;Birthdate&quot;: &quot;01-01-1960&quot;,&#xd;
        &quot;EffectiveDate&quot;: &quot;09-01-2022&quot;,&#xd;
        &quot;SubsidyLevel&quot;: &quot;4&quot;,&#xd;
        &quot;Zip&quot;: &quot;90010&quot;,&#xd;
        &quot;Fips&quot;: &quot;06037&quot;,&#xd;
        &quot;IsPrimary&quot;: false,&#xd;
        &quot;Profile&quot;: {&#xd;
            &quot;FirstName&quot;: &quot;AnkurQA&quot;,&#xd;
            &quot;LastName&quot;: &quot;DesaiQA&quot;,&#xd;
            &quot;PartAEffectiveDate&quot;: &quot;05-01-2022&quot;,&#xd;
            &quot;PartBEffectiveDate&quot;: &quot;09-01-2022&quot;,&#xd;
            &quot;MBI&quot;: &quot;1AA1AA1AA11&quot;&#xd;
        },&#xd;
        &quot;Dosages&quot;: [&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;00071015523&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;30698006001&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;51991081801&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            }&#xd;
        ],&#xd;
        &quot;Pharmacies&quot;: [&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 0,&#xd;
                &quot;PharmacyID&quot;: &quot;K3RC2&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 1,&#xd;
                &quot;PharmacyID&quot;: &quot;3684847&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 2,&#xd;
                &quot;PharmacyID&quot;: &quot;1770598823&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            }&#xd;
        ],&#xd;
        &quot;reqid&quot;: &quot;5&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">SessionID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">[0].SessionID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session w/ Profile" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;reqid&quot;: &quot;5&quot;,&#xd;
        &quot;SessionID&quot;: &quot;&quot;,&#xd;
        &quot;SSOName&quot;: &quot;&quot;,&#xd;
        &quot;SSOValue&quot;: &quot;&quot;,&#xd;
        &quot;BLUserName&quot;: &quot;SSOAgent999&quot;,&#xd;
        &quot;Expires&quot;: &quot;2099-01-01&quot;,&#xd;
        &quot;Zip&quot;: &quot;90010&quot;,&#xd;
        &quot;Fips&quot;: &quot;06037&quot;,&#xd;
        &quot;EffectiveDate&quot;: &quot;2022-09-01&quot;,&#xd;
        &quot;HealthStatus&quot;: 3,&#xd;
        &quot;Birthdate&quot;: &quot;1960-01-01&quot;,&#xd;
        &quot;CRMID&quot;: &quot;&quot;,&#xd;
        &quot;SubsidyLevel&quot;: 1,&#xd;
        &quot;SubsidyPercent&quot;: 0,&#xd;
        &quot;UserName&quot;: &quot;&quot;,&#xd;
        &quot;Password&quot;: &quot;&quot;,&#xd;
        &quot;Status&quot;: &quot;&quot;,&#xd;
        &quot;StatusReason&quot;: &quot;&quot;,&#xd;
        &quot;Profile&quot;: {&#xd;
            &quot;FirstName&quot;: &quot;AnkurTestQA&quot;,&#xd;
            &quot;MiddleInitial&quot;: &quot;D&quot;,&#xd;
            &quot;LastName&quot;: &quot;DesaiTestQA&quot;,&#xd;
            &quot;EmailAddress&quot;: &quot;desaiconnecturetest@gmail.com&quot;,&#xd;
            &quot;MemberAddress&quot;: {&#xd;
                &quot;Address1&quot;: &quot;1234 Any Street&quot;,&#xd;
                &quot;Address2&quot;: &quot;Suite 100QA&quot;,&#xd;
                &quot;City&quot;: &quot;Los Angeles&quot;,&#xd;
                &quot;State&quot;: &quot;CA&quot;,&#xd;
                &quot;Zip&quot;: &quot;90010&quot;,&#xd;
                &quot;County&quot;: &quot;Los Angeles&quot;&#xd;
            },&#xd;
            &quot;Birthdate&quot;: &quot;1960-01-01&quot;,&#xd;
            &quot;HomePhone&quot;: &quot;2625633771&quot;,&#xd;
            &quot;WorkPhone&quot;: &quot;&quot;,&#xd;
            &quot;CellPhone&quot;: &quot;&quot;,&#xd;
            &quot;GenderID&quot;: 1,&#xd;
            &quot;MaritalStatusID&quot;: 0,&#xd;
            &quot;UserName&quot;: &quot;&quot;,&#xd;
            &quot;Password&quot;: &quot;&quot;,&#xd;
            &quot;ModifiedPassword&quot;: &quot;&quot;,&#xd;
            &quot;CRMID&quot;: &quot;&quot;,&#xd;
            &quot;CustomField1&quot;: &quot;&quot;,&#xd;
            &quot;CustomField2&quot;: &quot;&quot;,&#xd;
            &quot;CustomField3&quot;: &quot;&quot;,&#xd;
            &quot;CustomField4&quot;: &quot;&quot;,&#xd;
            &quot;CustomField5&quot;: &quot;&quot;,&#xd;
            &quot;PartAEffectiveDate&quot;: &quot;2020-05-01&quot;,&#xd;
            &quot;PartBEffectiveDate&quot;: &quot;2020-09-01&quot;,&#xd;
            &quot;MBI&quot;: &quot;1AA1AA1AA11&quot;,&#xd;
            &quot;PIN&quot;: &quot;&quot;&#xd;
        },&#xd;
        &quot;Dosages&quot;: [&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;00071015523&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;30698006001&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;51991081801&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            }&#xd;
        ],&#xd;
        &quot;Pharmacies&quot;: [&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 0,&#xd;
                &quot;PharmacyID&quot;: &quot;K3RC2&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 1,&#xd;
                &quot;PharmacyID&quot;: &quot;3684847&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 2,&#xd;
                &quot;PharmacyID&quot;: &quot;1770598823&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            }&#xd;
        ],&#xd;
        &quot;Questions&quot;: [&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 1,&#xd;
                &quot;Value&quot;: &quot;Male&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 4,&#xd;
                &quot;Value&quot;: &quot;Smoker&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 6,&#xd;
                &quot;Value&quot;: &quot;No&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 9,&#xd;
                &quot;Value&quot;: &quot;2022-09-01&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 14,&#xd;
                &quot;Value&quot;: &quot;90010&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 15,&#xd;
                &quot;Value&quot;: &quot;06037&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 16,&#xd;
                &quot;Value&quot;: &quot;1960-01-01&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 17,&#xd;
                &quot;Value&quot;: &quot;2020-05-01&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 26,&#xd;
                &quot;Value&quot;: &quot;2020-09-01&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session - No Profile" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;HealthStatus&quot;: &quot;3&quot;,&#xd;
        &quot;Birthdate&quot;: &quot;01-01-1960&quot;,&#xd;
        &quot;EffectiveDate&quot;: &quot;01-01-2022&quot;,&#xd;
        &quot;SubsidyLevel&quot;: &quot;4&quot;,&#xd;
        &quot;Zip&quot;: &quot;43719&quot;,&#xd;
        &quot;Fips&quot;: &quot;39013&quot;,&#xd;
        &quot;BLusername&quot;: &quot;sritest020&quot;,&#xd;
        &quot;IsPrimary&quot;: false,&#xd;
        &quot;Dosages&quot;: [&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;00071015523&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;30698006001&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;51991081801&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            }&#xd;
        ],&#xd;
        &quot;Pharmacies&quot;: [&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 0,&#xd;
                &quot;PharmacyID&quot;: &quot;K3RC2&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 1,&#xd;
                &quot;PharmacyID&quot;: &quot;3684847&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 2,&#xd;
                &quot;PharmacyID&quot;: &quot;1770598823&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            }&#xd;
        ],&#xd;
        &quot;reqid&quot;: &quot;5&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session - w/ Questions" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;EffectiveDate&quot;: &quot;07-01-2022&quot;,&#xd;
        &quot;Zip&quot;: &quot;90010&quot;,&#xd;
        &quot;Fips&quot;: &quot;06037&quot;,&#xd;
        &quot;HealthStatus&quot;: 3,&#xd;
        &quot;Birthdate&quot;: &quot;01-01-1960&quot;,&#xd;
        &quot;BLusername&quot;: &quot;QATest1234&quot;,&#xd;
        &quot;Profile&quot;: {&#xd;
            &quot;FirstName&quot;: &quot;firstname&quot;,&#xd;
            &quot;LastName&quot;: &quot;lastname&quot;,&#xd;
            &quot;MBI&quot;: &quot;1EG4TE5MD73&quot;&#xd;
        },&#xd;
        &quot;Dosages&quot;: [&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;00071015523&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;30698006001&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;51991081801&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            }&#xd;
        ],&#xd;
        &quot;Pharmacies&quot;: [&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 0,&#xd;
                &quot;PharmacyID&quot;: &quot;K3RC2&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 1,&#xd;
                &quot;PharmacyID&quot;: &quot;3684847&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 2,&#xd;
                &quot;PharmacyID&quot;: &quot;1770598823&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            }&#xd;
        ],&#xd;
        &quot;Questions&quot;: [&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 1,&#xd;
                &quot;Name&quot;: &quot;Gender&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your gender?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Male&quot;,&#xd;
                    &quot;Female&quot;&#xd;
                ],&#xd;
                &quot;Value&quot;: &quot;Male&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 4,&#xd;
                &quot;Name&quot;: &quot;Tobacco&quot;,&#xd;
                &quot;Text&quot;: &quot;Do you smoke?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Non-Smoker&quot;,&#xd;
                    &quot;Smoker&quot;&#xd;
                ],&#xd;
                &quot;Value&quot;: &quot;Non-Smoker&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 5,&#xd;
                &quot;Name&quot;: &quot;PaymentMethod&quot;,&#xd;
                &quot;Text&quot;: &quot;What premium payment frequency do you prefer?  (Note: Not all billing options are available or endorsed by all Carriers - Please review the enrollment application for the final billing options.)&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Bi-Monthly&quot;,&#xd;
                    &quot;Monthly&quot;,&#xd;
                    &quot;Quarterly&quot;,&#xd;
                    &quot;Semi-Annually&quot;,&#xd;
                    &quot;Annually&quot;,&#xd;
                    &quot;LumpSum&quot;&#xd;
                ],&#xd;
                &quot;Value&quot;: &quot;Annually&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 6,&#xd;
                &quot;Name&quot;: &quot;Household&quot;,&#xd;
                &quot;Text&quot;: &quot;Will you also be signing up your spouse?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Yes&quot;,&#xd;
                    &quot;No&quot;&#xd;
                ],&#xd;
                &quot;Value&quot;: &quot;No&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 9,&#xd;
                &quot;Name&quot;: &quot;EffectiveDate&quot;,&#xd;
                &quot;Text&quot;: &quot;When would you like coverage to begin?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
                &quot;Value&quot;: &quot;09/01/2022&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 10,&#xd;
                &quot;Name&quot;: &quot;GuaranteedIssue&quot;,&#xd;
                &quot;Text&quot;: &quot;Are you under Guaranteed Issue?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Yes&quot;,&#xd;
                    &quot;No&quot;&#xd;
                ],&#xd;
                &quot;Value&quot;: &quot;Yes&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 11,&#xd;
                &quot;Name&quot;: &quot;Height&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your height?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;Integer&quot;,&#xd;
                &quot;Tooltip&quot;: &quot;Height (inches)&quot;,&#xd;
                &quot;Value&quot;: &quot;60&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 12,&#xd;
                &quot;Name&quot;: &quot;Weight&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your weight?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;Integer&quot;,&#xd;
                &quot;Tooltip&quot;: &quot;Weight (pounds)&quot;,&#xd;
                &quot;Value&quot;: &quot;180&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 14,&#xd;
                &quot;Name&quot;: &quot;ZipCode&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your zipcode?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;Value&quot;: &quot;90010&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 15,&#xd;
                &quot;Name&quot;: &quot;County_FIPS&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your county?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;Value&quot;: &quot;06037&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 16,&#xd;
                &quot;Name&quot;: &quot;DateOfBirth&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your date of birth?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
                &quot;Value&quot;: &quot;01/01/1960&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 17,&#xd;
                &quot;Name&quot;: &quot;PartBEffectiveDate&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your Part B Effective Date?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
                &quot;Value&quot;: &quot;09/01/2021&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 25,&#xd;
                &quot;Name&quot;: &quot;GIAdditional&quot;,&#xd;
                &quot;Text&quot;: &quot;Additional GI Question&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Yes&quot;,&#xd;
                    &quot;No&quot;&#xd;
                ],&#xd;
                &quot;Value&quot;: &quot;No&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 26,&#xd;
                &quot;Name&quot;: &quot;PartAEffectiveDate&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your Part A Effective Date?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
                &quot;Value&quot;: &quot;05/01/2020&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 28,&#xd;
                &quot;Name&quot;: &quot;Disability&quot;,&#xd;
                &quot;Text&quot;: &quot;Were you Medicare eligible due to disability or ESRD, or did you turn 65 on or after January 1, 2020?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;Value&quot;: &quot;No&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 29,&#xd;
                &quot;Name&quot;: &quot;EFTDiscount&quot;,&#xd;
                &quot;Text&quot;: &quot;Will you be paying your premium via Electronic Funds Transfer (EFT) from your bank account?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Yes&quot;,&#xd;
                    &quot;No&quot;&#xd;
                ],&#xd;
                &quot;Value&quot;: &quot;No&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 30,&#xd;
                &quot;Name&quot;: &quot;BenefitAmount&quot;,&#xd;
                &quot;Text&quot;: &quot;Amount that the Benefit will Cover&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;Integer&quot;,&#xd;
                &quot;Value&quot;: 500&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 31,&#xd;
                &quot;Name&quot;: &quot;HCDaysCovered&quot;,&#xd;
                &quot;Text&quot;: &quot;Number of Days Covered&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;Integer&quot;,&#xd;
                &quot;Value&quot;: 10&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session - SSO value only" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
	{&#xd;
        &quot;SSOValue&quot;: &quot;2ef298fd-9e2c-4a11-9c68-6772bce1a6c0&quot;,&#xd;
        &quot;BLUsername&quot;: &quot;sritest2020&quot;&#xd;
	}&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session XML" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;ArrayOfSession&gt;&#xd;
    &lt;Session&gt;&#xd;
        &lt;Birthdate&gt;1953-03-08&lt;/Birthdate&gt;&#xd;
        &lt;Dosages&gt;&#xd;
            &lt;Dosage&gt;&#xd;
                &lt;DaysOfSupply&gt;30&lt;/DaysOfSupply&gt;&#xd;
                &lt;MetricQuantity&gt;45&lt;/MetricQuantity&gt;&#xd;
                &lt;NDC&gt;45963067711&lt;/NDC&gt;&#xd;
            &lt;/Dosage&gt;&#xd;
            &lt;Dosage&gt;&#xd;
                &lt;DaysOfSupply&gt;30&lt;/DaysOfSupply&gt;&#xd;
                &lt;MetricQuantity&gt;2&lt;/MetricQuantity&gt;&#xd;
                &lt;NDC&gt;00074634702&lt;/NDC&gt;&#xd;
            &lt;/Dosage&gt;&#xd;
            &lt;Dosage&gt;&#xd;
                &lt;DaysOfSupply&gt;30&lt;/DaysOfSupply&gt;&#xd;
                &lt;MetricQuantity&gt;13&lt;/MetricQuantity&gt;&#xd;
                &lt;NDC&gt;00085720601&lt;/NDC&gt;&#xd;
            &lt;/Dosage&gt;&#xd;
        &lt;/Dosages&gt;&#xd;
        &lt;Pharmacies&gt;&#xd;
            &lt;Pharmacy&gt;&#xd;
                &lt;PharmacyID&gt;0714154&lt;/PharmacyID&gt;&#xd;
                &lt;IsMailOrder&gt;false&lt;/IsMailOrder&gt;&#xd;
                &lt;PharmacyIDType&gt;1&lt;/PharmacyIDType&gt;&#xd;
            &lt;/Pharmacy&gt;&#xd;
        &lt;/Pharmacies&gt;&#xd;
        &lt;Profile&gt;&#xd;
            &lt;Birthdate&gt;1953-03-08&lt;/Birthdate&gt;&#xd;
            &lt;FirstName&gt;firstname&lt;/FirstName&gt;&#xd;
            &lt;LastName&gt;lastname&lt;/LastName&gt;&#xd;
        &lt;/Profile&gt;&#xd;
        &lt;Providers&gt;&#xd;
            &lt;ProviderIdentifiers&gt;&#xd;
                &lt;AddressId&gt;21e03bfa-a57c-3400-b496-4734a82067e2&lt;/AddressId&gt;&#xd;
                &lt;IsPrimary&gt;true&lt;/IsPrimary&gt;&#xd;
                &lt;NPI&gt;1881984748&lt;/NPI&gt;&#xd;
            &lt;/ProviderIdentifiers&gt;&#xd;
        &lt;/Providers&gt;&#xd;
        &lt;SubsidyLevel&gt;4&lt;/SubsidyLevel&gt;&#xd;
    &lt;/Session&gt;&#xd;
&lt;/ArrayOfSession&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session with profile +" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;Zip&quot;: &quot;55305&quot;,&#xd;
        &quot;Fips&quot;: &quot;27053&quot;,&#xd;
        &quot;HealthStatus&quot;: 3,&#xd;
        &quot;Birthdate&quot;: &quot;1940-02-10T00:00:00&quot;,&#xd;
        &quot;SubsidyLevel&quot;: 4,&#xd;
        &quot;Profile&quot;: {&#xd;
            &quot;FirstName&quot;: &quot;AnkurTestQA&quot;,&#xd;
            &quot;LastName&quot;: &quot;DesaiTestQA&quot;,&#xd;
            &quot;EmailAddress&quot;: &quot;desaiconnecturetest@gmail.com&quot;,&#xd;
            &quot;Birthdate&quot;: &quot;1980-12-22&quot;,&#xd;
            &quot;MBI&quot;: &quot;1AA1AA1AA11&quot;&#xd;
        }&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session with providers" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;Birthdate&quot;: &quot;1954-03-02T00:00:00&quot;,&#xd;
        &quot;Providers&quot;: [&#xd;
            {&#xd;
                &quot;npi&quot;: &quot;1962450304&quot;,&#xd;
                &quot;addressId&quot;: &quot;4658bd63-b465-3eef-959e-e49f88891cc2&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session one brand drug" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;Dosages&quot;: [&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;68180096301&quot;,&#xd;
                &quot;MetricQuantity&quot;: 17,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session - w/ Medigap questions" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;EffectiveDate&quot;: &quot;2022-07-01&quot;,&#xd;
        &quot;Zip&quot;: &quot;71602&quot;,&#xd;
        &quot;Fips&quot;: &quot;05053&quot;,&#xd;
        &quot;HealthStatus&quot;: 3,&#xd;
        &quot;Birthdate&quot;: &quot;1960-01-01&quot;,&#xd;
        &quot;Questions&quot;: [&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 1,&#xd;
                &quot;Name&quot;: &quot;Gender&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your gender?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Male&quot;,&#xd;
                    &quot;Female&quot;&#xd;
                ],&#xd;
                &quot;Tooltip&quot;: &quot;&quot;,&#xd;
                &quot;Value&quot;: &quot;Male&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 4,&#xd;
                &quot;Name&quot;: &quot;Tobacco&quot;,&#xd;
                &quot;Text&quot;: &quot;Do you smoke?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Non-Smoker&quot;,&#xd;
                    &quot;Smoker&quot;&#xd;
                ],&#xd;
                &quot;Tooltip&quot;: &quot;&quot;,&#xd;
                &quot;Value&quot;: &quot;Non-Smoker&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 6,&#xd;
                &quot;Name&quot;: &quot;Household&quot;,&#xd;
                &quot;Text&quot;: &quot;Will you also be signing up your spouse?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Yes&quot;,&#xd;
                    &quot;No&quot;&#xd;
                ],&#xd;
                &quot;Tooltip&quot;: &quot;&quot;,&#xd;
                &quot;Value&quot;: &quot;No&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 9,&#xd;
                &quot;Name&quot;: &quot;EffectiveDate&quot;,&#xd;
                &quot;Text&quot;: &quot;When would you like coverage to begin?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
                &quot;Tooltip&quot;: &quot;&quot;,&#xd;
                &quot;Value&quot;: &quot;1/1/2022 12:00:00 PM&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 10,&#xd;
                &quot;Name&quot;: &quot;GuaranteedIssue&quot;,&#xd;
                &quot;Text&quot;: &quot;Are you under Guaranteed Issue?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;AnswerList&quot;: [&#xd;
                    &quot;Yes&quot;,&#xd;
                    &quot;No&quot;&#xd;
                ],&#xd;
                &quot;Tooltip&quot;: &quot;&quot;,&#xd;
                &quot;Value&quot;: &quot;No&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 14,&#xd;
                &quot;Name&quot;: &quot;ZipCode&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your zipcode?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;Tooltip&quot;: &quot;&quot;,&#xd;
                &quot;Value&quot;: &quot;43719&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 15,&#xd;
                &quot;Name&quot;: &quot;County_FIPS&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your county?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
                &quot;Tooltip&quot;: &quot;&quot;,&#xd;
                &quot;Value&quot;: &quot;39013&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 16,&#xd;
                &quot;Name&quot;: &quot;DateOfBirth&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your date of birth?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
                &quot;Tooltip&quot;: &quot;&quot;,&#xd;
                &quot;Value&quot;: &quot;3/30/1943 8:00:00 PM&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 17,&#xd;
                &quot;Name&quot;: &quot;PartBEffectiveDate&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your Part B Effective Date?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
                &quot;Tooltip&quot;: &quot;&quot;,&#xd;
                &quot;Value&quot;: &quot;2/29/2008 4:00:00 PM&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 26,&#xd;
                &quot;Name&quot;: &quot;PartAEffectiveDate&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your Part A Effective Date?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
                &quot;Value&quot;: &quot;2/29/2008 4:00:00 PM&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session - w/ dental/vision questions" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;Birthdate&quot;: &quot;1944-08-19T00:00:00&quot;,&#xd;
        &quot;Questions&quot;: [&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 9,&#xd;
                &quot;Name&quot;: &quot;EffectiveDate&quot;,&#xd;
                &quot;Text&quot;: &quot;When would you like coverage to begin?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
                &quot;Value&quot;: &quot;01/01/2022&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;QuestionID&quot;: 16,&#xd;
                &quot;Name&quot;: &quot;DateOfBirth&quot;,&#xd;
                &quot;Text&quot;: &quot;What is your date of birth?&quot;,&#xd;
                &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
                &quot;Value&quot;: &quot;01/01/1950&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session - no profile" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;Zip&quot;: &quot;23114&quot;,&#xd;
        &quot;FIPS&quot;: &quot;51041&quot;&#xd;
        //&quot;SSOValue&quot;: &quot;00d7f6aa-0e26-4625-9e4a-ceb86cca11ae&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create sessions - XML" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;ArrayOfSession&gt;&#xd;
	&lt;Session&gt;&#xd;
		&lt;Birthdate&gt;1952-01-01&lt;/Birthdate&gt;&#xd;
		&lt;Dosages&gt;&#xd;
			&lt;Dosage&gt;&#xd;
				&lt;DaysOfSupply&gt;30&lt;/DaysOfSupply&gt;&#xd;
				&lt;MetricQuantity&gt;30&lt;/MetricQuantity&gt;&#xd;
				&lt;NDC&gt;60505257808&lt;/NDC&gt;&#xd;
			&lt;/Dosage&gt;&#xd;
			&lt;Dosage&gt;&#xd;
				&lt;DaysOfSupply&gt;90&lt;/DaysOfSupply&gt;&#xd;
				&lt;MetricQuantity&gt;3.5&lt;/MetricQuantity&gt;&#xd;
				&lt;NDC&gt;24208078055&lt;/NDC&gt;&#xd;
			&lt;/Dosage&gt;&#xd;
			&lt;Dosage&gt;&#xd;
				&lt;DaysOfSupply&gt;60&lt;/DaysOfSupply&gt;&#xd;
				&lt;MetricQuantity&gt;30&lt;/MetricQuantity&gt;&#xd;
				&lt;NDC&gt;00299382230&lt;/NDC&gt;&#xd;
			&lt;/Dosage&gt;&#xd;
			&lt;Dosage&gt;&#xd;
				&lt;DaysOfSupply&gt;90&lt;/DaysOfSupply&gt;&#xd;
				&lt;MetricQuantity&gt;1&lt;/MetricQuantity&gt;&#xd;
				&lt;NDC&gt;00074334603&lt;/NDC&gt;&#xd;
			&lt;/Dosage&gt;&#xd;
		&lt;/Dosages&gt;&#xd;
		&lt;Fips/&gt;&#xd;
		&lt;HealthStatus&gt;3&lt;/HealthStatus&gt;&#xd;
		&lt;Pharmacies&gt;&#xd;
			&lt;Pharmacy&gt;&#xd;
				&lt;IsMailOrder&gt;false&lt;/IsMailOrder&gt;&#xd;
				&lt;PharmacyID&gt;J7K38&lt;/PharmacyID&gt;&#xd;
				&lt;PharmacyIDType&gt;0&lt;/PharmacyIDType&gt;&#xd;
			&lt;/Pharmacy&gt;&#xd;
		&lt;/Pharmacies&gt;&#xd;
		&lt;Profile&gt;&#xd;
			&lt;Birthdate&gt;1952-01-01&lt;/Birthdate&gt;&#xd;
			&lt;FirstName&gt;SMS&lt;/FirstName&gt;&#xd;
			&lt;LastName&gt;User&lt;/LastName&gt;&#xd;
		&lt;/Profile&gt;&#xd;
		&lt;Questions&gt;&#xd;
			&lt;Question&gt;&#xd;
				&lt;QuestionID&gt;6&lt;/QuestionID&gt;&#xd;
				&lt;Value&gt;No&lt;/Value&gt;&#xd;
			&lt;/Question&gt;&#xd;
			&lt;Question&gt;&#xd;
				&lt;QuestionID&gt;10&lt;/QuestionID&gt;&#xd;
				&lt;Value&gt;No&lt;/Value&gt;&#xd;
			&lt;/Question&gt;&#xd;
			&lt;Question&gt;&#xd;
				&lt;QuestionID&gt;26&lt;/QuestionID&gt;&#xd;
				&lt;Value/&gt;&#xd;
			&lt;/Question&gt;&#xd;
		&lt;/Questions&gt;&#xd;
		&lt;SSOValue&gt;LAPRO:11582&lt;/SSOValue&gt;&#xd;
		&lt;SubsidyLevel&gt;4&lt;/SubsidyLevel&gt;&#xd;
		&lt;SubsidyPercent&gt;0&lt;/SubsidyPercent&gt;&#xd;
		&lt;Zip/&gt;&#xd;
	&lt;/Session&gt;&#xd;
&lt;/ArrayOfSession&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Session" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Session" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {   &#xd;
        &quot;Zip&quot;: &quot;90010&quot;,&#xd;
        &quot;Fips&quot;: &quot;06037&quot;,&#xd;
        &quot;SSOValue&quot;: &quot;FD7A97D1-3E8C-E711-BFB7-0025B5ABHI&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apiplancompare/v1/Session</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update session with questions" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;Profile&quot;: {&#xd;
        &quot;FirstName&quot;: &quot;Jared&quot;,&#xd;
        &quot;LastName&quot;: &quot;Doe&quot;,&#xd;
        &quot;EmailAddress&quot;: &quot;jdoe@example.com&quot;&#xd;
    },&#xd;
    &quot;HealthStatus&quot;: &quot;3&quot;,&#xd;
    &quot;Pharmacies&quot;: [&#xd;
        {&#xd;
            &quot;PharmacyIDType&quot;: 0,&#xd;
            &quot;PharmacyRecordID&quot;: 1,&#xd;
            &quot;PharmacyID&quot;: &quot;16NDM&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;PharmacyIDType&quot;: 0,&#xd;
            &quot;PharmacyRecordID&quot;: 2,&#xd;
            &quot;PharmacyID&quot;: &quot;KT8VS&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;Dosages&quot;: [&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;16729013401&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;65862073260&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;00603155416&quot;,&#xd;
            &quot;MetricQuantity&quot;: 1800,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;50111091601&quot;,&#xd;
            &quot;MetricQuantity&quot;: 60,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;13668010401&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;00093092810&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;69452020720&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;00378001805&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;00093171301&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;Questions&quot;: [&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 1,&#xd;
            &quot;Value&quot;: &quot;Male&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 4,&#xd;
            &quot;Value&quot;: &quot;Non-Smoker&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 6,&#xd;
            &quot;Value&quot;: &quot;No&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 9,&#xd;
            &quot;Value&quot;: &quot;2021-10-01&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 14,&#xd;
            &quot;Value&quot;: &quot;43719&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 15,&#xd;
            &quot;Value&quot;: &quot;39013&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 16,&#xd;
            &quot;Value&quot;: &quot;1950-12-11&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 26,&#xd;
            &quot;Value&quot;: &quot;2021-10-01&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 17,&#xd;
            &quot;Value&quot;: &quot;2021-10-01&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apiplancompare/v1/Session/${SessionID}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetHealthCostBenefits(Post)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;IsCostCalculate&quot;: true,&#xd;
	&quot;IsUseDefaultValues&quot;: true,&#xd;
	&quot;PlanYearForDefault&quot;: 2022,&#xd;
	&quot;BenefitCategories&quot;: [{&#xd;
			&quot;BenefitCategoryID&quot;: 4,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Inpatient Hospital Care&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0,&#xd;
			&quot;DefaultAnnualDuration&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 5,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Inpatient Mental Health Care&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0,&#xd;
			&quot;DefaultAnnualDuration&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 6,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Skilled Nursing Facility (SNF)&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0,&#xd;
			&quot;DefaultAnnualDuration&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 7,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Home Health Care&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 9,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Doctor Office Visits&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 2&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 10,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Chiropractic Services&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 1&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 12,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Outpatient Mental Health Care&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 13,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Outpatient Substance Abuse&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 14,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Outpatient Services/Surgery&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 2&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 15,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Ambulance Services&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 16,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Emergency Care&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 17,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Urgently Needed Care&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 19,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Durable Medical Equipment&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 20,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Prosthetic Devices&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 21,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Diabetes Supplies and Services&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 22,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Diagnostic Tests, Lab and Radiology Services, and X-Rays&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 5&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 40,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Doctor Specialty Visit&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 6&#xd;
		},&#xd;
		{&#xd;
			&quot;BenefitCategoryID&quot;: 41,&#xd;
			&quot;BenefitCategoryName&quot;: &quot;Ambulatory Surgery Center&quot;,&#xd;
			&quot;DefaultAnnualOccurrences&quot;: 0&#xd;
		}&#xd;
	]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/HealthCostBenefits/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Not getting expected response</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">children</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetHealthCostBenefits" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/HealthCostBenefits/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sessions (XML)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.Header;
String token = props.get(&quot;token&quot;);
log.info(&quot;\n\n\n***************run time token is  &quot; + token);
log.info(&quot;\n\n\n***************Bearer token is  &quot; + &quot;Bearer&quot; +token);
sampler.getHeaderManager().add(new Header(&quot;Authorization&quot;,&quot;Bearer&quot; +token));</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/xml</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/xml</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create session XML" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;ArrayOfSession&gt;&#xd;
    &lt;Session&gt;&#xd;
        &lt;Birthdate&gt;1953-03-08&lt;/Birthdate&gt;&#xd;
        &lt;Dosages&gt;&#xd;
            &lt;Dosage&gt;&#xd;
                &lt;DaysOfSupply&gt;30&lt;/DaysOfSupply&gt;&#xd;
                &lt;MetricQuantity&gt;45&lt;/MetricQuantity&gt;&#xd;
                &lt;NDC&gt;45963067711&lt;/NDC&gt;&#xd;
            &lt;/Dosage&gt;&#xd;
            &lt;Dosage&gt;&#xd;
                &lt;DaysOfSupply&gt;30&lt;/DaysOfSupply&gt;&#xd;
                &lt;MetricQuantity&gt;2&lt;/MetricQuantity&gt;&#xd;
                &lt;NDC&gt;00074634702&lt;/NDC&gt;&#xd;
            &lt;/Dosage&gt;&#xd;
            &lt;Dosage&gt;&#xd;
                &lt;DaysOfSupply&gt;30&lt;/DaysOfSupply&gt;&#xd;
                &lt;MetricQuantity&gt;13&lt;/MetricQuantity&gt;&#xd;
                &lt;NDC&gt;00085720601&lt;/NDC&gt;&#xd;
            &lt;/Dosage&gt;&#xd;
        &lt;/Dosages&gt;&#xd;
        &lt;Pharmacies&gt;&#xd;
            &lt;Pharmacy&gt;&#xd;
                &lt;PharmacyID&gt;0714154&lt;/PharmacyID&gt;&#xd;
                &lt;IsMailOrder&gt;false&lt;/IsMailOrder&gt;&#xd;
                &lt;PharmacyIDType&gt;1&lt;/PharmacyIDType&gt;&#xd;
            &lt;/Pharmacy&gt;&#xd;
        &lt;/Pharmacies&gt;&#xd;
        &lt;Profile&gt;&#xd;
            &lt;Birthdate&gt;1953-03-08&lt;/Birthdate&gt;&#xd;
            &lt;FirstName&gt;firstname&lt;/FirstName&gt;&#xd;
            &lt;LastName&gt;lastname&lt;/LastName&gt;&#xd;
        &lt;/Profile&gt;&#xd;
        &lt;Providers&gt;&#xd;
            &lt;ProviderIdentifiers&gt;&#xd;
                &lt;AddressId&gt;21e03bfa-a57c-3400-b496-4734a82067e2&lt;/AddressId&gt;&#xd;
                &lt;IsPrimary&gt;true&lt;/IsPrimary&gt;&#xd;
                &lt;NPI&gt;1881984748&lt;/NPI&gt;&#xd;
            &lt;/ProviderIdentifiers&gt;&#xd;
        &lt;/Providers&gt;&#xd;
        &lt;SubsidyLevel&gt;4&lt;/SubsidyLevel&gt;&#xd;
    &lt;/Session&gt;&#xd;
&lt;/ArrayOfSession&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create sessions - XML" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;ArrayOfSession&gt;&#xd;
	&lt;Session&gt;&#xd;
		&lt;Birthdate&gt;1952-01-01&lt;/Birthdate&gt;&#xd;
		&lt;Dosages&gt;&#xd;
			&lt;Dosage&gt;&#xd;
				&lt;DaysOfSupply&gt;30&lt;/DaysOfSupply&gt;&#xd;
				&lt;MetricQuantity&gt;30&lt;/MetricQuantity&gt;&#xd;
				&lt;NDC&gt;60505257808&lt;/NDC&gt;&#xd;
			&lt;/Dosage&gt;&#xd;
			&lt;Dosage&gt;&#xd;
				&lt;DaysOfSupply&gt;90&lt;/DaysOfSupply&gt;&#xd;
				&lt;MetricQuantity&gt;3.5&lt;/MetricQuantity&gt;&#xd;
				&lt;NDC&gt;24208078055&lt;/NDC&gt;&#xd;
			&lt;/Dosage&gt;&#xd;
			&lt;Dosage&gt;&#xd;
				&lt;DaysOfSupply&gt;60&lt;/DaysOfSupply&gt;&#xd;
				&lt;MetricQuantity&gt;30&lt;/MetricQuantity&gt;&#xd;
				&lt;NDC&gt;00299382230&lt;/NDC&gt;&#xd;
			&lt;/Dosage&gt;&#xd;
			&lt;Dosage&gt;&#xd;
				&lt;DaysOfSupply&gt;90&lt;/DaysOfSupply&gt;&#xd;
				&lt;MetricQuantity&gt;1&lt;/MetricQuantity&gt;&#xd;
				&lt;NDC&gt;00074334603&lt;/NDC&gt;&#xd;
			&lt;/Dosage&gt;&#xd;
		&lt;/Dosages&gt;&#xd;
		&lt;Fips/&gt;&#xd;
		&lt;HealthStatus&gt;3&lt;/HealthStatus&gt;&#xd;
		&lt;Pharmacies&gt;&#xd;
			&lt;Pharmacy&gt;&#xd;
				&lt;IsMailOrder&gt;false&lt;/IsMailOrder&gt;&#xd;
				&lt;PharmacyID&gt;J7K38&lt;/PharmacyID&gt;&#xd;
				&lt;PharmacyIDType&gt;0&lt;/PharmacyIDType&gt;&#xd;
			&lt;/Pharmacy&gt;&#xd;
		&lt;/Pharmacies&gt;&#xd;
		&lt;Profile&gt;&#xd;
			&lt;Birthdate&gt;1952-01-01&lt;/Birthdate&gt;&#xd;
			&lt;FirstName&gt;SMS&lt;/FirstName&gt;&#xd;
			&lt;LastName&gt;User&lt;/LastName&gt;&#xd;
		&lt;/Profile&gt;&#xd;
		&lt;Questions&gt;&#xd;
			&lt;Question&gt;&#xd;
				&lt;QuestionID&gt;6&lt;/QuestionID&gt;&#xd;
				&lt;Value&gt;No&lt;/Value&gt;&#xd;
			&lt;/Question&gt;&#xd;
			&lt;Question&gt;&#xd;
				&lt;QuestionID&gt;10&lt;/QuestionID&gt;&#xd;
				&lt;Value&gt;No&lt;/Value&gt;&#xd;
			&lt;/Question&gt;&#xd;
			&lt;Question&gt;&#xd;
				&lt;QuestionID&gt;26&lt;/QuestionID&gt;&#xd;
				&lt;Value/&gt;&#xd;
			&lt;/Question&gt;&#xd;
		&lt;/Questions&gt;&#xd;
		&lt;SSOValue&gt;LAPRO:11582&lt;/SSOValue&gt;&#xd;
		&lt;SubsidyLevel&gt;4&lt;/SubsidyLevel&gt;&#xd;
		&lt;SubsidyPercent&gt;0&lt;/SubsidyPercent&gt;&#xd;
		&lt;Zip/&gt;&#xd;
	&lt;/Session&gt;&#xd;
&lt;/ArrayOfSession&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Questions" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">true</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.Header;
String token = props.get(&quot;token&quot;);
log.info(&quot;\n\n\n***************run time token is  &quot; + token);
log.info(&quot;\n\n\n***************Bearer token is  &quot; + &quot;Bearer&quot; +token);
sampler.getHeaderManager().add(new Header(&quot;Authorization&quot;,&quot;Bearer&quot; +token));</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuestionSession" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;HealthStatus&quot;: &quot;3&quot;,&#xd;
        &quot;Birthdate&quot;: &quot;01-01-1960&quot;,&#xd;
        &quot;EffectiveDate&quot;: &quot;09-01-2022&quot;,&#xd;
        &quot;SubsidyLevel&quot;: &quot;4&quot;,&#xd;
        &quot;Zip&quot;: &quot;90010&quot;,&#xd;
        &quot;Fips&quot;: &quot;06037&quot;,&#xd;
        &quot;IsPrimary&quot;: false,&#xd;
        &quot;Profile&quot;: {&#xd;
            &quot;FirstName&quot;: &quot;AnkurQA&quot;,&#xd;
            &quot;LastName&quot;: &quot;DesaiQA&quot;,&#xd;
            &quot;PartAEffectiveDate&quot;: &quot;05-01-2022&quot;,&#xd;
            &quot;PartBEffectiveDate&quot;: &quot;09-01-2022&quot;,&#xd;
            &quot;MBI&quot;: &quot;1AA1AA1AA11&quot;&#xd;
        },&#xd;
        &quot;Dosages&quot;: [&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;00071015523&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;30698006001&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            },&#xd;
            {&#xd;
                &quot;NDC&quot;: &quot;51991081801&quot;,&#xd;
                &quot;MetricQuantity&quot;: 30,&#xd;
                &quot;DaysOfSupply&quot;: 30&#xd;
            }&#xd;
        ],&#xd;
        &quot;Pharmacies&quot;: [&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 0,&#xd;
                &quot;PharmacyID&quot;: &quot;K3RC2&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 1,&#xd;
                &quot;PharmacyID&quot;: &quot;3684847&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            },&#xd;
            {&#xd;
                &quot;PharmacyIDType&quot;: 2,&#xd;
                &quot;PharmacyID&quot;: &quot;1770598823&quot;,&#xd;
                &quot;IsMailOrder&quot;: false&#xd;
            }&#xd;
        ],&#xd;
        &quot;reqid&quot;: &quot;5&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">APIPlanCompare/v1/Session/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">SessionID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">[0].SessionID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add answers" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 1,&#xd;
        &quot;Name&quot;: &quot;Gender&quot;,&#xd;
        &quot;Text&quot;: &quot;What is your gender?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;AnswerList&quot;: [&#xd;
            &quot;Male&quot;,&#xd;
            &quot;Female&quot;&#xd;
        ],&#xd;
        &quot;Value&quot;: &quot;Male&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 4,&#xd;
        &quot;Name&quot;: &quot;Tobacco&quot;,&#xd;
        &quot;Text&quot;: &quot;Do you smoke?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;AnswerList&quot;: [&#xd;
            &quot;Non-Smoker&quot;,&#xd;
            &quot;Smoker&quot;&#xd;
        ],&#xd;
        &quot;Value&quot;: &quot;Non-Smoker&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 5,&#xd;
        &quot;Name&quot;: &quot;PaymentMethod&quot;,&#xd;
        &quot;Text&quot;: &quot;What premium payment frequency do you prefer?  (Note: Not all billing options are available or endorsed by all Carriers - Please review the enrollment application for the final billing options.)&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;AnswerList&quot;: [&#xd;
            &quot;Bi-Monthly&quot;,&#xd;
            &quot;Monthly&quot;,&#xd;
            &quot;Quarterly&quot;,&#xd;
            &quot;Semi-Annually&quot;,&#xd;
            &quot;Annually&quot;,&#xd;
            &quot;LumpSum&quot;&#xd;
        ],&#xd;
        &quot;Value&quot;: &quot;Annually&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 6,&#xd;
        &quot;Name&quot;: &quot;Household&quot;,&#xd;
        &quot;Text&quot;: &quot;Will you also be signing up your spouse?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;AnswerList&quot;: [&#xd;
            &quot;Yes&quot;,&#xd;
            &quot;No&quot;&#xd;
        ],&#xd;
        &quot;Value&quot;: &quot;No&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 9,&#xd;
        &quot;Name&quot;: &quot;EffectiveDate&quot;,&#xd;
        &quot;Text&quot;: &quot;When would you like coverage to begin?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
        &quot;Value&quot;: &quot;10-01-2022&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 10,&#xd;
        &quot;Name&quot;: &quot;GuaranteedIssue&quot;,&#xd;
        &quot;Text&quot;: &quot;Are you under Guaranteed Issue?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;AnswerList&quot;: [&#xd;
            &quot;Yes&quot;,&#xd;
            &quot;No&quot;&#xd;
        ],&#xd;
        &quot;Value&quot;: &quot;Yes&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 11,&#xd;
        &quot;Name&quot;: &quot;Height&quot;,&#xd;
        &quot;Text&quot;: &quot;What is your height?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;Integer&quot;,&#xd;
        &quot;Tooltip&quot;: &quot;Height (inches)&quot;,&#xd;
        &quot;Value&quot;: &quot;60&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 12,&#xd;
        &quot;Name&quot;: &quot;Weight&quot;,&#xd;
        &quot;Text&quot;: &quot;What is your weight?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;Integer&quot;,&#xd;
        &quot;Tooltip&quot;: &quot;Weight (pounds)&quot;,&#xd;
        &quot;Value&quot;: &quot;180&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 14,&#xd;
        &quot;Name&quot;: &quot;ZipCode&quot;,&#xd;
        &quot;Text&quot;: &quot;What is your zipcode?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;Value&quot;: &quot;90010&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 15,&#xd;
        &quot;Name&quot;: &quot;County_FIPS&quot;,&#xd;
        &quot;Text&quot;: &quot;What is your county?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;Value&quot;: &quot;06037&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 16,&#xd;
        &quot;Name&quot;: &quot;DateOfBirth&quot;,&#xd;
        &quot;Text&quot;: &quot;What is your date of birth?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
        &quot;Value&quot;: &quot;01/01/1960&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 17,&#xd;
        &quot;Name&quot;: &quot;PartBEffectiveDate&quot;,&#xd;
        &quot;Text&quot;: &quot;What is your Part B Effective Date?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
        &quot;Value&quot;: &quot;09/01/2022&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 25,&#xd;
        &quot;Name&quot;: &quot;GIAdditional&quot;,&#xd;
        &quot;Text&quot;: &quot;Additional GI Question&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;AnswerList&quot;: [&#xd;
            &quot;Yes&quot;,&#xd;
            &quot;No&quot;&#xd;
        ],&#xd;
        &quot;Value&quot;: &quot;No&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 26,&#xd;
        &quot;Name&quot;: &quot;PartAEffectiveDate&quot;,&#xd;
        &quot;Text&quot;: &quot;What is your Part A Effective Date?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
        &quot;Value&quot;: &quot;05/01/2022&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 28,&#xd;
        &quot;Name&quot;: &quot;Disability&quot;,&#xd;
        &quot;Text&quot;: &quot;Were you Medicare eligible due to disability or ESRD, or did you turn 65 on or after January 1, 2020?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;Value&quot;: &quot;No&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 29,&#xd;
        &quot;Name&quot;: &quot;EFTDiscount&quot;,&#xd;
        &quot;Text&quot;: &quot;Will you be paying your premium via Electronic Funds Transfer (EFT) from your bank account?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;AnswerList&quot;: [&#xd;
            &quot;Yes&quot;,&#xd;
            &quot;No&quot;&#xd;
        ],&#xd;
        &quot;Value&quot;: &quot;No&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 30,&#xd;
        &quot;Name&quot;: &quot;BenefitAmount&quot;,&#xd;
        &quot;Text&quot;: &quot;Amount that the Benefit will Cover&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;Integer&quot;,&#xd;
        &quot;Value&quot;: 500&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 31,&#xd;
        &quot;Name&quot;: &quot;HCDaysCovered&quot;,&#xd;
        &quot;Text&quot;: &quot;Number of Days Covered&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;Integer&quot;,&#xd;
        &quot;Value&quot;: 5&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Questions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Questions " enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022-09-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2022-09-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Questions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add dental/vision answers" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 1,&#xd;
        &quot;Name&quot;: &quot;Gender&quot;,&#xd;
        &quot;Text&quot;: &quot;What is your gender?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;String&quot;,&#xd;
        &quot;AnswerList&quot;: [&#xd;
            &quot;Male&quot;,&#xd;
            &quot;Female&quot;&#xd;
        ],&#xd;
        &quot;Value&quot;: &quot;Male&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 9,&#xd;
        &quot;Name&quot;: &quot;EffectiveDate&quot;,&#xd;
        &quot;Text&quot;: &quot;When would you like coverage to begin?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
        &quot;Value&quot;: &quot;2022-02-01&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;QuestionID&quot;: 16,&#xd;
        &quot;Name&quot;: &quot;DateOfBirth&quot;,&#xd;
        &quot;Text&quot;: &quot;What is your date of birth?&quot;,&#xd;
        &quot;AnswerType&quot;: &quot;DateTime&quot;,&#xd;
        &quot;Value&quot;: &quot;1962-11-02&quot;&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Questions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get dental questions" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">53226</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">Zip</stringProp>
              </elementProp>
              <elementProp name="FIPS" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">55079</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">FIPS</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1/1/2022%2012:00:00%20PM</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">4096</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Questions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Questions ALT" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="zip" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">90010</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">zip</stringProp>
              </elementProp>
              <elementProp name="fips" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">06037</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">fips</stringProp>
              </elementProp>
              <elementProp name="effectiveDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">09-01-2022</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">effectiveDate</stringProp>
              </elementProp>
              <elementProp name="planType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">planType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session/${SessionID}/Questions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update session with questions" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;Profile&quot;: {&#xd;
        &quot;FirstName&quot;: &quot;Jared&quot;,&#xd;
        &quot;LastName&quot;: &quot;Doe&quot;,&#xd;
        &quot;EmailAddress&quot;: &quot;jdoe@example.com&quot;&#xd;
    },&#xd;
    &quot;HealthStatus&quot;: &quot;3&quot;,&#xd;
    &quot;Pharmacies&quot;: [&#xd;
        {&#xd;
            &quot;PharmacyIDType&quot;: 0,&#xd;
            &quot;PharmacyRecordID&quot;: 1,&#xd;
            &quot;PharmacyID&quot;: &quot;16NDM&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;PharmacyIDType&quot;: 0,&#xd;
            &quot;PharmacyRecordID&quot;: 2,&#xd;
            &quot;PharmacyID&quot;: &quot;KT8VS&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;Dosages&quot;: [&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;16729013401&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;65862073260&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;00603155416&quot;,&#xd;
            &quot;MetricQuantity&quot;: 1800,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;50111091601&quot;,&#xd;
            &quot;MetricQuantity&quot;: 60,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;13668010401&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;00093092810&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;69452020720&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;00378001805&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;NDC&quot;: &quot;00093171301&quot;,&#xd;
            &quot;MetricQuantity&quot;: 30,&#xd;
            &quot;DaysOfSupply&quot;: &quot;30&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;Questions&quot;: [&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 1,&#xd;
            &quot;Value&quot;: &quot;Male&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 4,&#xd;
            &quot;Value&quot;: &quot;Non-Smoker&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 6,&#xd;
            &quot;Value&quot;: &quot;No&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 9,&#xd;
            &quot;Value&quot;: &quot;2021-10-01&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 14,&#xd;
            &quot;Value&quot;: &quot;43719&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 15,&#xd;
            &quot;Value&quot;: &quot;39013&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 16,&#xd;
            &quot;Value&quot;: &quot;1950-12-11&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 26,&#xd;
            &quot;Value&quot;: &quot;2021-10-01&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;QuestionID&quot;: 17,&#xd;
            &quot;Value&quot;: &quot;2021-10-01&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apiplancompare/v1/Session/${SessionID}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="MemberSearch" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.Header;
String token = props.get(&quot;token&quot;);
log.info(&quot;\n\n\n***************run time token is  &quot; + token);
log.info(&quot;\n\n\n***************Bearer token is  &quot; + &quot;Bearer&quot; +token);
sampler.getHeaderManager().add(new Header(&quot;Authorization&quot;,&quot;Bearer&quot; +token));</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MemberSession" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
&#xd;
     &quot;BLUserName&quot;: &quot;ATMWorkflowBroker&quot;,&#xd;
&#xd;
     &quot;Profile&quot;: {&#xd;
&#xd;
            &quot;FirstName&quot;: &quot;drxtest123&quot;,&#xd;
&#xd;
            &quot;LastName&quot;: &quot;drxtest123&quot;&#xd;
&#xd;
      }&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/Session</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">MemberSessionID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">[0].SessionID</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Member Enrollments" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="firstName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">DrxTest</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">firstName</stringProp>
              </elementProp>
              <elementProp name="lastName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">DrxTest</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">lastName</stringProp>
              </elementProp>
              <elementProp name="dateOfBirth" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">1970-01-01</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">dateOfBirth</stringProp>
              </elementProp>
              <elementProp name="applicationStartDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">2021-11-19</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">applicationStartDate</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/session/${MemberSessionID}/MemberSearch/GetMemberEnrollments</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Broker Member EnrollmentPDF" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="confirmationNumber" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">A54941699919523M</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">confirmationNumber</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APIPlanCompare/v1/session/${MemberSessionID}/MemberSearch/GetBrokerMemberEnrollmentPdf</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\Users\AbhishekRawat\Desktop\GitHub Azurepipelining\result.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesPercentilesGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Percentiles" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesDistributionGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Distribution" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">100</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="testName" elementType="Argument">
              <stringProp name="Argument.name">testName</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="connectionString" elementType="Argument">
              <stringProp name="Argument.name">connectionString</stringProp>
              <stringProp name="Argument.value">InstrumentationKey=084cbc51-6dac-4c9f-b2ca-07019e8f4f45;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus.livediagnostics.monitor.azure.com/</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="liveMetrics" elementType="Argument">
              <stringProp name="Argument.name">liveMetrics</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersList" elementType="Argument">
              <stringProp name="Argument.name">samplersList</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="useRegexForSamplerList" elementType="Argument">
              <stringProp name="Argument.name">useRegexForSamplerList</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="logResponseData" elementType="Argument">
              <stringProp name="Argument.name">logResponseData</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="logSampleData" elementType="Argument">
              <stringProp name="Argument.name">logSampleData</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">io.github.adrianmo.jmeter.backendlistener.azure.AzureBackendClient</stringProp>
      </BackendListener>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
